sample_id,participant_id,q1_experience_general,q2_experience_java,q3_expertise_general,q4_expertise_java,q5_characteristics_expert,q6_task_1,q6_task_2,q6_task_3,q7_java_rating_time,q7_java_rating_prof_exp,q7_java_rating_depth,q7_java_rating_breadth,q7_java_rating_project_size,q7_java_rating_other_devs,q7_java_rating_trans_know,q7_java_rating_other,q7_java_rating_other_data,q8_traits_behaviors,q9_employers,q10_monitoring,q10b_monitoring,q11_reward,q12_decline,q13_mentor,q12b_decline,q13b_mentor,q14_challenging_problem,q15_dreyfus,q16_age,q17_gender,q18_main_role,q18_main_role_other,q19_work_time,q20_team_size,q21_degree_cs,q21_degree_cs_other,q22_email,q23_remarks,participant_continent,participant_country
3,1,40,20,6,6,Thorough knowledge of at least one programming language and associated standard libraries.,Problem analysis,Writing code,Debugging code,1,1,1,1,1,0,0,0,,Being good at mathematical proofs -- the ability to discover the path required from a set of starting conditions to a final solution.,"Encourage their developers to teach each other new skills -- periodic  team growth  talks by all of the developer in the group. Developers can choose any technical subject that interests them, not necessarily directly related to their current projects. This encourages people to expose themselves to other technical areas.",2,,I feel that writing good software is something of an art. I get a feeling of satisfaction from creating an elegant piece of code.,2,2,,,Avoiding useless meetings.,5,55,1,3,,100,6,3,,,,North America,UnitedStates
3,2,41,21,6,5,"Can articulate any problem or solution to a problem in a way that any person, whether expert or not, can understand the challenge, and if that other person is also an expert, that other person can dive right in to propose a solution.",Analysis,Communication,Team-Building,1,1,1,1,1,1,1,0,,"Passion for learning, willingness to give credit to others with good or better solutions, willingness to help others.",Allow them enough freedom so their imagination can roam and lead to new approaches.,1,The tools I use give me metrics.,Learning new approaches to problems.,1,1,"People can lose motivation if management just doesn't have a clue, or if tasks are boring.","Ken Anderson at BBN was my mentor.  He was a free thinker who introduced me to many new concepts, and he was very supportive of the neat things I sometimes did, no matter how small.  He also introduced me to lots of industry leaders, got me on Program Committees, etc.",Keeping up with the accelerating developments that happen every day.,5,55,1,1,,100,2,1,,ANONYMIZED,,North America,UnitedStates
3,3,40,0,6,1,"Understanding logic, ability to dissect complex problems into simpler pieces, understanding of hardware and software architectures",Problem analysis,Information architecture,Debugging,0,0,0,0,0,0,0,1,"The fact that I loathe Java and have spent as little time programming in it â€” as opposed to C, C++, Objective-C, PHP, Python, Javascript, etc. â€” as possible.",Attention to detail; willingness and ability to be a continuous learner; exposure to languages OTHER THAN JAVA,"Planning to offer regularly training rather than hiring based on buzzword-du-jour; hiring a more diverse set of employees, in age and gender, particularly",1,Git logs; the  Pomodoro method  (manually),Making things work,2,2,,,"That's too broad a question. Technology moves very quickly, software doesn't always keep up with it. When it does, it's hard to keep up with the software.",2,59,1,3,,85,1,1,,,,North America,UnitedStates
3,4,10,0,4,1,"Commitment, Persistence, Patience, High Intellectual functioning.  Unusual, but ability to communicate well with non-programmers and clients is a very useful skill.",Abstraction,Communication,Persistence and Patience,1,0,0,1,0,0,0,0,,"Intellectual ability, logical reasoning  Persistence, commitment  Thirst for knowledge  Communication skills",Mentorship  Continuing Education  Communication skills training  Periodic assessment to identify strengths and weaknesses and remediation.,2,,"Seeing the finished product, learning new things along the way.",2,2,,,"Honestly, I am mostly a hobbyist and freelancer, most of my experience is with HTML, CSS, JS, jQuery, MySQL, PHP, C# / .NET, Joomla! CMS, Apache servers.  Some IOS and OS X.  I think maintaining focus is the most difficult for me, unless I am working on a specific project, learning new material, etc.      In a work environment, being a member of a team and communicating with non-programmers is probably the most difficult.  I have Asperger's. ):",2,58,1,1,,5,1,1,,ANONYMIZED,"I have a mathematics degree (B.A. from 1980), actually also an M.D.  Some course work recently in CS.  Mostly self-taught or OTJ training for the CS skills that I do have.  Java isn't my thing, although it has a lot in common with C# and Mac Swift.",North America,UnitedStates
3,5,36,22,6,6,A willingness to learn new ideas. Learn from past mistakes. The ability to dig into root causes.,Break a problem into small components,Think abstractly (generalize the solution),An eagerness to discover how/why things work/don't work,1,1,1,1,1,1,1,1,I've been programming in Java since the days it was called Oak- I was a Sun employee,A spouse that understands your obsession. Logical/rational thinker. Ability to think abstractly.,Private offices.,2,,Problem solving,1,1,Fatigue. Bad management.,"When I went to work at IBM in 1981 I worked with a guy that had been writing firmware since the 1950's, he helped me see what it takes to go from idea to production and maintenance.",Finding the next interesting problem,5,58,1,1,,80,6,2,,ANONYMIZED,,North America,UnitedStates
3,6,10,0,2,1,One who understands problems in a way that can lead to an algorithmic solution. Someone who can break a giant problem into the little pieces that can be solved to add back up to the whole.,Managing time,"Communicating with others: up, down and across",Coding,1,0,1,0,0,0,0,0,,"Analytical thinking, perseverance, the ability to solve a problem in multiple ways",Offer challenging assignments in areas their employees have no experience in. Provide periodic technical training aimed at keeping up with current techniques and trends.,2,,Solving a problem and seeing it work.,2,2,,,Keeping up with new techniques and APIs.,1,59,1,1,,10,1,1,,,,North America,UnitedStates
3,7,30,0,5,1,"Gets the code right, promptly.",testing for correctness,documentation,reusing known-correct code,0,0,0,0,0,0,0,1,I have no Java programming expertise,Hating when it is wrong.,Professional development,2,,When it works.,2,2,,,Understanding the complex software environment I am working in well enough to write correct code against it.,1,57,1,1,,20,1,4,,,There are environments other than Java.,North America,UnitedStates
3,8,40,15,6,5,"Ability to take in new concepts, architectures, and problem spaces...and add value to the required solution.",Understanding,Applying expertise,Growing expertise,0,0,0,1,0,0,1,0,,"Patience, kindness, and curiousity.","Survey employees with how they keep up to date, and share the results.  Provide incentives for study.  Facilitate lunch-and-learn sessions with books (paid for by the company).",2,,Continuous learning.,2,1,,"University of Oregon, graduate studies.  My office mates and I took development to a whole new level in terms of interest in new projects and problem spaces.",Bringing the team to the right level for what  done  means.,5,54,1,5,,100,27,3,,ANONYMIZED,,North America,
3,9,40,0,5,1,"Memory, Vision, Accuracy in thought, Practical Engineering Discipline, Motivated, Teachable, Likes to Learn",Envisioning the project from the user's perspective,Decomposing the problem into manageable parts,"Designing parts and code in a testable, understandable and maintainable manner",1,0,0,1,0,0,1,0,,"Imagination, Honesty, Accuracy, Detail attention, simplicity of design","I have always recommended to Microsoft that they give Devs a month/year simply to learn/play/grow their skills.  Being in a grind with deadlines constantly is not healthy.  Giving devs uninterrupted time with as little email and meetings as possible helps.  Also good use of collaborative tools and the best tools available helps.  Periodic interruptions for social activity help keep the dev from becoming too isolated from people.  Also, cross association with devs from other organizations, languages, and disciplines will help grow a dev in ways he will never grow isolated in a single company from a single perspective.",2,,Its just fun - and that's what it should be.,1,1,Too many devs on a single project. (70)  Too little thought given before starting a huge project.  Too tight of deadlines.  Management changing the features as we coded.,I have several. One type is a great manager - one that knows how to give you enough room to work but doesn't leave you isolated.  The other type is the technical master and I rarely get to talk with these guys on stuff as they are typically the starts and way too busy to talk.  They need to be freed up once in awhile to mentor others.,"For me it is comprehension of a large project.  If I can't get it all in my head, I have a hard time engaging and sometimes I loose so much sleep over trying to think of all the possible problems and approaches and issues that I burn out.  I am too passionate about programming to handle large and long projects.",4,58,1,1,,30,1,2,,ANONYMIZED,"Java - language is NOT important and should not be a target of your survey.  I mostly worked in ASM, C and now Javascript/nodejs.  I am retired so I don't really work at programming - I do it for fun and to help others.",North America,UnitedStates
3,10,40,8,6,3,They know how to develop software using best practices and patterns.,Interpreting specifications,Organizing data,Demanding quality product,0,0,1,0,1,0,0,0,,"An ability to simplify processes.  Open gate, walk through gate, close gate . Then be able to do that a thousand times over for any given project.","Support their upkeep of certifications, whatever form that might take.",2,,When I move on to the next project.,2,1,,Team mates who challenged me every day to produce better software.,Project managers and owners who aren't focusing.,3,,1,1,,80,1,1,,,,North America,UnitedStates
3,11,50,1,3,1,Skepticism that the problem has been adequately formulated,Transparency; it should be obvious what each code component does and why,Avoiding premature optimization,"Following conventions and standards except in one-off situations, which should be id'd as such",0,0,0,0,0,0,1,0,,"Fearlessness, insistence on understanding failure, willingness to throw away all work-to-date and start from scratch, ability to switch modes from abstract to concrete quickly and identifying the causes of unexpected successes","Each employee should be required to develop and continuously revise checklists and review criteria for self-evaluating their own work, periodically review others' work against those criteria and occsionally translate existing work into a new language ",2,,"Reaching the point in a project or new language of  fluency,  the ability to express programming ideas idiomatically without having to go through a mechanical process of construction",2,2,,,Grasping the tacit assumptions and conventions,1,68,1,10,Toolmaker for facilitating own work as a lawyer,10,1,1,,ANONYMIZED,"My name was probably inappropriately selected. I dropped out of the only computer course I ever took (FORTRAN, in 1965), received only one job offer related to software development (service engineer to debug configuration issues in the Netscape line of servers), wrote only one substantive program (to demonstrate the feasibility of a proposed regulatory requirement by  the US Securities and Exchange Commission) and have had a lot of fun troubleshooting other peoples' code and helping newbies. I don't consider myself a software developer and you probably shouldn't either.",North America,UnitedStates
3,12,50,0,5,1,"Humility - able to ask questions and listen to others  Tenacious - a combination of stamina and stubbornness.  Curiosity - always maintain an ability, willingness and desire to learn",Analysis - Learning to understood the task,Design - be able to apply the analysis in appropriate technology,"Code and Test, and repeat. I cant do enough testing.",1,0,0,0,0,0,0,0,,"Ability/willingness to learn and understand business practices. Ego strong enough to ask questions, and tolerate nasty answers.  Stubbornness - willing to push to identify and resolve problems. Attention to detail. ","Balance their business needs and concerns, with the interests and capabilities of the employee.",2,,"When I realize I have solved a problem - either in understanding the issue, correctly programming the issue, and seeing the results in front of me. This makes me feel clever, and powerful.",1,1,"I think that programmers have been separated too much from the local business process. As a result, we have lost the ability to analyze the business requirements. We generally have developed the attitude that we are from IT, we know what's best for you. Second, business leaders have gotten tired of this scenario, and invest most funding in new mediocre software packages, and new computers, and essentially abandoning the possibility to enhance their business process with appropriate tailored software. ","Several people, all of whom had patience to teach, and correct, and a willingness to help when tackling difficult bugs. I learned as much from their generous characters as well as their coding skills.","Work environment. To program at my best, I must maintain a focus. The work environments that I have experienced have not been enabling this way. The best technique I can find is to work quietly, late into the night.",6,67,1,1,,100,1,1,,ANONYMIZED,Thanks for inviting me to participate.,North America,UnitedStates
3,13,40,3,3,2,Logical thinking; ability to translate requirements into actions; ability to comprehend and retain a significant amount of technical information.,Logical thinking,algorithmics,intellectual curiosity,0,1,1,0,1,1,1,0,,"Ability to work with others, teamwork.",Allow time off from current projects to pursue individual research/learning,2,,Completing a project successfully.,1,1,"In my experience (I started programming in 1962), new languages, systems, hardware became more complex and more diverse, programming became more complex. In my 50s I found it difficult to keep up with new paradigms and languages. So I turned to technical writing and eventually stopped programming. But my long programming experience has greatly helped my ability to be a successful technical writer.",There was always someone who knew more than I did. That person was the source of a lot of information and new techniques.,"Fitting the method to the problem. Determining the best, most efficient, way to solve a problem.",3,72,1,1,,50,1,2,,ANONYMIZED,"Why the focus on Java?  Most of my programming experience has been at the assembler, Fortran, C/C++, PHP/Python, level.   ",North America,UnitedStates
3,14,25,0,6,1,A software developer should be  an adept in solving puzzles(including programming problems) and abstract thinking  through  interest and lots of practice.,Good at researching how to solve a particular problem. Knows where to find appropriate information relating to an issue. ,Good at knowing which tools are appropriate for a given programming task.,"Good at adapting new tools, languages and paradigms( such as functional programming) throughout his career.",1,1,0,0,0,0,0,1,Not interested in Java!,Interest in the craft of software development. This amounts to the intrinsic enjoyment of programming for any number of reasons personal reasons.,"Allow for a flexible, creative work environment staffed by true programmers who are devoted to their craft.",1,By keeping track of the general pace of progress on a given project. No formal Metric.,The aesthetic pleasure of solving problems. Programming as art!,1,2,"New computer science graduates actually seem to be not familiar with their field in many cases. Most colleges teach the subject poorly. Also, in the US there has been the encroachment of mere secretarial activities into software development. Development teams should be segregated from general office chatter.",,To continue to refine one's skills and accept new paradigms in development such as functional programming.Not being bullied into less than desirable ways of software development. Putting up with hidebound management.,1,69,1,1,,100,8,2,,ANONYMIZED,This seems to focus on Java? How about COBOL or Visual Basic or other  advanced  languages? ,North America,UnitedStates
3,15,52,0,6,1,"Thinking clearly about each project, decomposing it into independent components that can all be understood in relatively simple terms. Explaining the system clearly to others: how to use it, how it works, how to maintain it. ",System design,Testing,Documentation,1,0,0,0,0,0,0,0,,Attention to detail.,"Hire good people, and encourage them to keep learning.",1,"Activity statistics, github issues, peer reviews.",Seeing people all over the world using my programs.,1,1,"For myself, it's mostly the effects of aging on the brain. At age 66, I can't hold as much information short-term memory, for example. In general, I am more forgetful.     I can compensate for a lot of that by writing simpler functions with clean interfaces. The results are still good, but my productivity is much slower than when I was younger.",There were several experienced lead programmers who taught me quite a lot when I was starting out.,Good testing remains the biggest challenge for software development.,6,66,1,3,,100,12,2,,ANONYMIZED,,North America,UnitedStates
3,16,50,0,6,1,"The software development expert understands there is an initial and recurring cost to each line of code written and seeks to minimize the cost of the project over the expected life of the project. The software development expert is not afraid of new tools, new tasks, or new methodologies. The software development expert will reinvent the wheel if needs be, but is not threatened by the work of others.",imagination,tenacity,listening,0,1,1,0,0,0,0,0,,"a strong belief that you are not your software - conversely, a week belief that software development is the encoding of the personal thought process.",providing an opportunity to pursue interesting projects - without regard to return on investment,2,,discovering a better way forward and sharing it with colleagues.,1,2,I note in myself a decline in cognitive abilities with age. In the work environment I am discouraged to see return on investment as the highest good,,lack of regard for my work (and the work of my colleagues) by those who do not develop software combined with their unrealistic expectations,6,64,1,1,,80,1,1,,ANONYMIZED,,North America,UnitedStates
3,17,50,1,5,1,"Ability to communicate their vision of the current subject, both to another human, and to the machine involved, whatever that subject may be.",Communications,Process development,Process documentation,0,0,1,0,0,0,1,0,,Analytical thought process,,2,,I love it when a good plan comes together.,1,2,"Having a supervisor/architect who is very poor at communicating his design goals and ideas, and refuses to accept that this is the case, even when forcibly reminded, or who has to have you actively agree with him, and when you refuse to agree, denigrates you verbally (ad homonym), including in front of your peers. This sort of work environment leads to a CYA attitude, which then leads to further communications failure. ",,Continuing to find the fun in the current project.,3,66,1,1,,90,5,1,,ANONYMIZED,,North America,UnitedStates
3,18,38,0,4,1,Must always think 'out of the box'. Ability to design algorithms that will achive the desired results efficiently and with enough speed. and then using the tools he/she knows best to build it with an intuitive human interface.,Inventing the right algorythm,Deciding on the right tools and hardware. Repeating task 1 until satisfied,Building and Testing. Repeat tasks 1 and 2 until satisfied.,0,0,1,1,0,1,1,0,,Persistance. Perfectionism. Ability to think clearly. Ability to ignore traditional in favour of best-for-the-desired-result.,Encourage freedom to innovate. Award results that work well.,1,Number of small projects completed and bugs fixed each month.,Pride in my work when users are happy.,2,2,,,"Keeping up with changing technical standards. Software, hardware and volume of data.",2,71,1,3,,90,1,1,,ANONYMIZED,"I seldom use Java. Do most development with FlagShip, PHP and Xbase++.   ",Africa,SouthAfrica
3,19,48,1,5,2,Core skill is the ability to learn to learn. Simply learning is not enough. One must be able to recognize what one doesn't know or understand and then implement and execute a strategy for developing the skills required to do the job at hand.,Developing or clarifying requirements,Problem decomposition,Writing code that will be maintainable by others,1,0,1,0,1,1,0,0,,"Excellent listening skills, ability to find answers to technical questions, ability to focus intensely on coding, good relationship skills","Provide room for  fun  or  self-directed  projects. I need to have time to explore stuff I don't know but am interested in. For example, I work full time in PHP, but spend about 20% of my time developing C & C++ code for Arduino projects.",2,,Making users of my code happy,1,2,"With age (I am almost 70), my ability to keep up with the young coders.",,continuous learning,4,69,1,1,,90,2,1,,ANONYMIZED,,North America,UnitedStates
3,20,43,8,5,5,"Patience, knowing where and how to look for answers, having made prior mistakes.",Asking questions,Keeping current with best practices,Flexibility and patience when things don't go as planned,1,1,1,1,0,0,1,0,,"Loving computers and programming, getting satisfaction from a job well done, determination to solve problems that arise.",Give them some free time to pursue interest? I honestly have no idea.,2,,I get a physical thrill whenever a piece of software or a design works.,1,1,"It's a pretty broad question. I was thinking in terms of how performance goes down over a much shorter time span, like over a day, across a week and over the span of a long, too-intense project.    Of course there are other factors having to do with gaining intangible experience: unwillingness to let oneself be exploited; awareness of one's working environment and desire to strive for improved environments; over time. It's become very clear that our employers aren't going to allow us to really prosper in this business, since all the real money goes to the top and the usage of H1B visas and foreign contractors has functioned to dampen pay. That, combined with clearly criminal behavior of people like Steve Jobs and his co-conspirators who conspired to hold down wages in Silicon Valley for a generation. It has become harder and harder to make good money in this business. These and other things clearly have had an effect on peoples' willingness to do it.    Is that what you're asking?","It's a composite of wisdom gained over the years:    Briefly:    1) the best programmers are the laziest people, since they will go out of their way to make the computer do all the work (even if it takes them more time and they end up doing more work themselves) - a college professor.  2) that diversity of outlook is important and trying to hire people that only fit a certain mold will lead to a company that is in a mold. - Hewlett-Packard when it was a great company    I really don't have time to answer this fully.",Keeping up with the changes. It's necessary to stay focussed on needed skills and knowledge. It's also necessary to expand skills as change becomes apparent.  ,4,59,1,1,,100,3,1,,ANONYMIZED,,North America,UnitedStates
3,21,34,16,6,6,The drive to keep learning ,Identifying key concepts,Aiming for simplicity ,Taking one step at a time ,1,1,1,1,0,1,1,0,,Curiosity ,Allow a proportion of time for experimentation ,2,,Change ,2,2,,,Keeping abreast of developments in the field ,5,63,1,7,,20,1,1,,,,Europe,
3,22,40,0,5,1,"Ability to learn and interest in learning. Problem solving, Interest. Experience. Dedication, Working with people. Ability to see from multiple angles.",Learning,Problem solving,Stick-to-it-ness,1,0,1,1,0,0,1,0,,"Love of learning, problem solving, dedication, communication, listening",Allow paid learning time. Allow employee directed projects. Move employees between responsibilities and projects.,1,"Unit testing, lines of code, bugs associated with modules",Problem solving,1,1,Lack of management interest. Lack of control by management over development process.,My first professional boss. He set aside time for learning. Assigned projected that were stretches. Showed interest in both process and employees,Lack of managemnt,1,61,1,7,,40,12,2,,,"This survey shouldn't focus exclusively on Java. There is the whole dot net world, Python Ruby, javascript, Go, Scala etc.",North America,UnitedStates
3,23,18,2,4,2,"A wide range of facility in producing within an area of expertise and effectively coordinating that with ancillary processes. In other words, being good at your job and working well with others. In addition, having expertise means being able to perceive and accommodate needs that are relevant to the project even when they appear to be peripheral at best.",Understand the end users' need,Understand the technical requirements,Testing the derived system,1,1,1,1,0,0,0,0,,1) being able to resist distractions 2) understanding systems development processes 3) patients 4) a willingness to explore and adopt new techniques,1) be willing to support abilities (as opposed to identifying weaknesses) 2) provide funds for career development 3) recognize and reward employees' efforts regardless of the project 4) encourage team work 5) cross train 6) encourage training in areas outside of or peripheral to the target expertise (e.g. developing self-monitoring skills),1,"PSP-personal software programming. A system developed at Carnegie Mellon University, it is a method of classifying different kinds of modules (e.g. communications modules, printing modules, etc.), as well as different stages in a process (e.g. design, code, testing, etc.), and measuring both the quality and quantity of introduced errors by classifications. Ideally, the end result helps the developer understand how and where he tends to introduce bugs. It is axiomatic that the earlier a bug can be discovered, the earlier and less costly it will be to fix it.",A satisfied user. (Full disclosure: I feel that users are a pain in the a** but then so are children.),1,1,"The instances of noticeable decline seemed to me to have been generated by a loss of enthusiasm. In one case, it was in reaction to increasing stress as the company's economic condition deteriorated while in another it was the increasing likelihood that the programming efforts would be disdained, ignored or even thrown away.",He was a professor. His passion focused on enabling others to discern their own processes as they increased their skill at improving their processes.,"Inwardly-harnessing a tendency to get ahead of myself, to not let the momentum of my development outreach the caution needed to assure robustness.  Outwardly-dealing with managers who sacrifice quality in the pursuit of project objectives.",3,66,1,2,,20,1,1,,ANONYMIZED,"I worked in testing because I enjoyed the challenge of finding what others had not looked for or considered and I enjoyed the rewards that came from the easy success. That is a sad commentary. Most developers want to feel that they are hotshot engineers working on a Ferrari. But for the most part, the world wants Volkswagens and small trucks, things that are easy to understand and work well. Project managers will do well to help their teams find rewards in steady competency.",North America,UnitedStates
3,24,45,0,6,2,"That is a tough question! For a short answer, I would say it takes a person with years of experience in their field, and who knows how to solve problems because they have seen most of them before, and if they haven't seen them before, they know how to learn what they need then get the job done. (Sorry for the run-on sentence.)",Analytical/logical thinking,"Tons of experience, so they know how to solve existing problems","Love of algorithms, in computers and in the universe!",1,0,0,0,0,0,0,0,,"Analytical tendencies, love of math and/or science. Curious. Adaptive. NOT pedantic (too much). Detail oriented.","Foster fun and learning, perhaps with rewards, recognition. Treat employees as adults and ask them what they want. Send them to conferences to learn and meet others that do what they do.",2,,"Getting to see a program run that I've worked on. And fixing a problem, the more difficult the better.",2,1,,"He was an early Unix developer, and I was an Electrical Engineer who liked programming. He told me I could do it and explained how I could complete a programming task I wanted to perform. He's gone now, and even before he left this earth I had not seen him for many years, but he changed my life.","Staying interested, since the work can tend to be repetitive.",1,60,1,1,,50,8,1,,,,North America,UnitedStates
3,25,50,0,5,1,"1. Be willing to investigate every possible  reason for failure  in a  piece of software, and code for those exceptions.    2. Needs to test the code, and be willing to make revisions to improve it.    3. Needs to  think-outside-the-box , especially when debugging.",Understand to objective.,Be wlling to negotiate.,Pick an appropriate programming language to meet the objective.,0,0,0,0,0,0,0,1,I have only dabbled with Javascript.,"A) Be a god listener ... understand what the users want.  B) Be patient, and take time to think through the process.  C) Respect other people's opinions, and seek them out.","Provide in-house training if possible, so the employee gains familiarity with company goals and standards.",1,"I test my software, and then have associates test it.","The ability to innovate, such as devising code that runs on both big-endian and little-endian machines.",2,1,,"My high school physics teacher, who challenged us to study problems, and find innovative solutions.",Dealing with a bureaucracy. ,1,74,1,1,,0,1,1,,ANONYMIZED,"I'm retired from Stanford University's IT-Services Staff, so some of the questions above don't apply.  But I still maintain the systems I developed.",North America,UnitedStates
3,26,32,16,6,6,"A software development expert keeps his or her skills sharp, continues to do some development even if the job doesn't call for it, stays abreast of new technology, keeps an eye on industry trends, and knows how to assess the value of a software project in the context of business needs.","Software development (coding, design, project management)",Self-driven learning,Communication (ability and willingness to understand and communicate topics outside strict areas of expertise),1,1,1,1,1,1,1,1,"My continued use of other JVM languages (Scala, in particular)","Analytical and critical thinking skills, (extreme) curiosity, willingness to learn, humility (because someone always knows more and can be a good resource), self-motivation","Foster a culture that values and rewards ongoing self-driven learning. For instance, encourage employees to get involved in open source projects or local user groups, to give presentations (especially outside the organization), to learn new skills without waiting for management to send them to a training class, etc. Many developers learn best from other developers and by doing, and working on projects outside the company can be stimulating, especially if those projects force the developers to stretch or to think about problems differently than they do during the work day.",1,"Testing tools, feedback from other developers, comparison of my code against code that is considered good for that language, some use of statistical metrics tools where applicable.",It melds the creative side of my personality with the analytical side.,1,1,"The decline I've observed is largely a result of complacency. As some people reach a point of stability in their careers, they become less driven to learn and more self-satisfied. I personally try hard to combat that (very human) tendency with several techniquest:    1. I attempt to associate myself with people who are either much more intelligent than I or who are better versed in technologies that interest me, because they force me to have to try to keep up with them, with keeps both my brain and my skills sharp.  2. I spend a lot of time trying to learn new things (new programming languages, new technologies, new techniques for design and development, etc.)  3. I attend conferences (and help organize a couple) and user group meetings, because they both impart new knowledge and help remind me that there's more to learn.  4. I recognize that the key to keeping my skills sharp is to use them. If the job I am currently doing doesn't have enough technical challenge to it, I supplement by doing projects on my own time.","There wasn't just one mentor. Throughout my careerâ€”and, especially, early onâ€”there have always been people who have taken an interest in me and helped me along. Mentors come in many forms. Some provide encouragement at the right time. Some provide challenges that force one to work harder. Some simply provide a  let's go!  kind of technical leadership. I am now over 50, and, logically, more likely to be a mentor than to need one; however, whenever I embark on something new (a new technology or a new role), I still seek mentors who can smooth the way.    Mentorship is a two-way street. The onus is not just on the mentor. ","Managing and reducing complexity. We build complex systems, and they continue to get more complex. It's a constant struggle to try to keep systems as simple as possible, so that complexity doesn't overwhelm the development process, the maintenance process, and the product quality.",5,55,1,7,,50,5,2,,,,North America,UnitedStates
3,27,35,5,6,4,A person who produces good well written tested and maintainable software that meets client expectations.,"Behaviour and Test driven development (i.e., writing automated tests and code that will pass those tests)",Collaboration with others to produce excellent designs,Tracking down bugs.,1,1,0,1,1,1,0,0,,Thirst for knowledge - continuous learning.  Ability to ask others for thoughts and ideas.  Commitment to producing quality code.,Use Agile processes.  Hire good team builders (devs and leaders) who will create a culture of high quality and learning.,1,"Various code quality tools for Ruby. (e.g., Rubocop, flog, flay)","Creation of beautiful software. (Easy to read, maintainable, low bug rates).",1,2,Being promoted to a manager.  You can't be a good programmer if you don't program a lot.,,"Balancing the practical/pragmatic vs  pureness .  E.g. - Using a case statement to select different behaviour of a few different classes vs. adding the behaviour to each class in question. Adding to each class is the  right  way to do it, but there are times you may choose to do it via the case statement. The tough part is know which is the  best  choice in a particular instance.",4,59,1,1,,95,5,4,,ANONYMIZED,,North America,
3,28,32,1,6,1,"Knowledge base plus capability to learn complex systems, both HW and SW. Capability to apply the knowledge for solving problems.","Able to learn the system, architecture, HW and apply it to solve required tasks","Knowledge of the Operating System, programming language, SW tools, as well HW",Communication to peers and management,1,0,1,0,0,0,0,0,,"perseverance, problem solving","do not support team work, support and encourage individuals who can drive the projects",1,"Keeping track of my projects, using required criteria","working with my computer, being able to manage complex system and create good working applications",2,2,,,"Learning the system - HW, OS, IDE, programming language, SW tools to the level of being productive software developer",3,72,1,3,,75,1,3,,,,North America,
3,29,30,0,6,1,"Someone who has mastered both his tools, both language semantics and ancillary gadgets.  Someone who knows enough CS theory to know when he's facing an intractable problem, or one that has been solved many times before (and how).  Someone who could, given enough time, replace the entire stack he depends on -- libraries and operating system -- using knowledge he already has.  ","Thinking things through, dispassionate logic",Assimilating information and judging its veracity,"Explaining what is, and what cannot be",1,1,1,0,0,0,0,0,,"Rationality, curiosity, audacity, and humility.  You have to be logical to solve problems, interested in problems and possible solutions, willing to try in the face of deadlines and  they said it couldn't be done .  And you have to accept that you'll be wrong a lot, that the problem with your program is probably your fault, and likely because of something you did recently.  You have to be able to treat your work as an artifact, not as an extension of your ego.  ","Self-improvement Fridays.  Seriously.  If Fridays were devoted to  intentional practice  geared to developing mastery, and programmers were allowed to devote time to fixing things that are broken or inadequate, but that no one ever has time to fix, the workplace would be much more satisfying and productive.  Most firms don't care about the quality of their programmer's skills or of their programs, and most programmers learn only what narrowly is needed to do the job at hand.  ",1,"Function points.  I have objectives I like to meet each day and week, making the software should do something that it didn't before.  ","Seeing my software used.  I mostly write libraries, and I like knowing others are using them and appreciate what they do.  ",2,1,,"One man just wrote excellent code, crystal clear, no wasted motion.  I'd never seen programming like his, and I still aspire to it.  Another was a database expert.  He helped me develop good habits of mind and insight into how DBMSs work.  ","I'm a senior developer.  I'm not alone when I say that my skills are under-appreciated, in part because the manager doesn't know what he doesn't know.   With 30 years experience, I can't code *faster* than someone with 5 years experience.  But I code better than I did 10 years ago.  I avoid pitfalls, especially unnecessary complexity.  I know old tools and features that work better than the new cool shiny.  I've seen people tilt at windmills, and know certain problem seem easy but have historically proved intractable to minds and resources greater than we ours.  So I can *avoid* work, and choose unconventional routes that  kids these days  don't even know exist.  Usually I'm not given the chance, and have to muddle along in the same straightjacket everyone else wears.  ",1,54,1,3,,100,3,1,,ANONYMIZED,"Interesting survey.  The Java parts are sort of over-specific, to my reckoning.  I'm a novice Java program like I'm a novice Smalltalk programmer; it happens to be a language I never used.  ",North America,UnitedStates
3,30,35,15,4,3,One that does not fix on one programming language and always uses the less risky way to program.,Analyse what is needed to fullfil a need,Knowing the Basics of the Processor and OS the program will run on,Knowing different technologies,0,0,1,0,1,0,1,0,,Think global. Know the Basics. Logical analysis of issues.,Look around what others do and ask in development forums and tech support. Try different approaches when programming.,2,,Being an analyst with broad knowledge.,3,2,,,The way that some IDEs and GUIs are designed. Finding the right background information ( I am a Sr Technical Support Specialist for software that I do not have the source code and that is sometimes bad or not documented),4,55,1,10,"Support Specialist, small tool programming",50,5,1,,,,Europe,
3,31,30,1,6,1,"A profund knowledge of a Computer SYSTEM, Development System and Language.",UML,Java,,1,0,0,0,0,0,0,0,,"Practical  Education, Matura Level, Level after Highschool","Permanent, but continuous education in latest skills ",2,,Knowing all Basics ,2,2,,,I was educated in Mainframe Computing and Formal Languages. I learned Object Oriented Languages too but I have no praxis in it.,1,67,1,8,,5,1,3,,ANONYMIZED,,Europe,
3,32,35,20,6,6,broad experience and good taste,determine what should be done - not all programming tasks are equally implementable,"determine the ways of implementation - languages, frameworks, management model",split the task into subtasks and recursively apply task 1 and task 2 to the subtasks,1,1,1,1,0,0,0,0,, mathematical background (including that derived from theoretical physics) and artistic taste (considering programming as an art),"stimulate refactoring and reimplementing of legacy code, instead of freezing outdated solutions",2,,salary,2,2,,,implementation of a hierarchical database management system,5,61,1,5,,90,4,3,,ANONYMIZED,,Europe,
3,33,50,1,5,2,"Somone with a broad experience of several programming languages, who has work one many diverse projects both large and small.",Problem analysis,Ability to generalize problems and solutions,,1,0,1,0,0,0,0,0,,Desire to learn diverse languages and to work of many different projects using a wide variety of technolgies.,I really don't think it is up to the employer. The onus is on the individual to progress his/her own development.,2,,Solving a particularly difficult proble. Also as I age the ability to mentor the next generation of programming.,2,2,,,To keep myself motivated. Both in terms of learning new technologies and in working on challenging projects,2,63,1,1,,90,1,2,,ANONYMIZED,,Europe,
3,34,30,0,5,1,Willingness to learn.  Able to think about the task at hand without a keyboard in front of them.,Planning and conceptulizing,Testing and planning tests,Willingness to learn and not set in ways,1,0,0,0,0,0,0,0,,"Access to training materials and references.   A solid QA department, and a supportive management team","Offer training, code reviews.   Allow developers to interact with QA teams.   Ongoing measurement of how they are doing, so they can make necessary adjustments to improve",1,"We use SCRUM/Sprint and track estimate story points, how many we accomplish and reviews afterwards of what was accomplished",Satisfaction on the part of the customer/user,2,2,,,"Lack of code documentation, staying on top on new trends that might help, without falling into the trap of using new trends to just use them.",1,57,1,3,,100,3,2,,,,North America,UnitedStates
3,35,30,5,6,4,"Deep understanding of the process of creating good, usable and reliable software from specifications.  Ability to select suitable language and algorithms for the project at hand.  Full knowledge of at least one language, including the subtleties and lesser used parts such as template metaprogramming in C++.  ",Learning the specifications to the point that logical errors in them can be found and corrected. ,Design a project based upon the specifications.,Writing tests that cover all of the parts of the project.,1,1,1,0,0,1,1,0,,Willingness to learn continually and to practise the craft.,Don't crush initiative and curiosity.  Devote time to professional development - seminars etc.,3,,Making a tool that is useful. ,2,2,,,Estimating the time required to complete a project.,3,60,1,1,,100,1,1,,ANONYMIZED,,North America,
3,36,44,16,6,6,"Good problem solving skills, good communication skills, logical thinking, creativity, attention to detail, persistence",Problem solving,Communicating clearly and unambiguously,Testing,1,1,1,1,0,0,0,0,,"Persistence, attention to detail, focus on completion and delivery, logical thinking",Don't know,2,,Partly feedback from satisfied users; partly the pure creativity of building something that works well.,2,1,,There are probably two or three. They all taught me at university in the mid 70s; they are all in the top league of computer scientists.,"Managing quality as the software becomes larger and more complex, the variety of users increases, and the size of the team increases.",4,64,1,10,"All of the above, often at the same time",80,4,4,,ANONYMIZED,"A much better survey than most similar ones I have completed: I was expecting stuff about methodologies which I always find hard to answer, because I'm very intuitive as a developer and hate following defined processes. One thing I don't see is questions about tooling. You've asked a lot about Java, but the programming language is only one of the tools we use.",Europe,
3,38,40,0,5,1,communication and analytical skills  a pragmatic approach combined with aestetic sense  mastering of several different programming languages,communication with stakeholders,"analysis, planning, project management",coding,1,0,0,0,0,0,0,0,,open-mindedness  curiousness  the will to become an expert,encourage further education (including paid leave to attend courses)  ,2,,everything  ;-),1,1,unsupportive work environment took the steam out of a previously highly motivated colleague,,finding (the cause of) bugs in complex systems that have grown over decades,1,58,1,1,,75,10,1,,,why the emphasis on Java?,Europe,
3,39,36,20,5,4,"Seeing beyond the task at hand - understanding how a choice between different ways of solving the problem will impact the behaviour and properties of the system as a whole. Being disciplined in the use of time and resources. Supporting and making intelligent use of the other members of the team. Knowing a large repertoire of solution patterns and recognising the right situations to apply them. Having the courage to invent novel solutions, but making good use of the work others have done where applicable.",Test-driven development,Expressing requirements through tests,Deriving architecture / design from tests,1,1,1,1,0,0,1,1,That I read the Heinz Kabutz's JavaSpecialists newsletter and usually manage to understand it!,Fascination with making things - otherwise you won't enjoy the job.  Pride / stubbornness - to give you the motivation to finish the job.  Humility - to admit your mistakes and to learn from your colleagues.  Ability to comprehend a body of code both in detail and in  the large .,Many different things.  Send people on conventional training courses.  Give enough time and money to let self-motivated individuals keep their skills up to date.  Organise regular events during work time to encourage learning and free thinking.  Organise occasional intra-company conferences and/or exhibitions.  Participate in inter-company friendly competitions.,1,Run static analysis tools to minimise coding errors / questionable practices.  Compare velocity across sprints.  Compare error statistics over time (this is tricky as there are usually several contributors).,Seeing everything working - the satisfaction of a job well done.  Getting positive feedback from users and from colleagues.  ,1,1,"I've been in the software industry for 36 years. It seems as if for the first half or two thirds of that time I was fortunate to be involved in areas at the forefront of the technology wave - office automation, object oriented development, embedded software, the WorldWide Web, Open Systems, Telecoms, mobile data, Open Source, XP and the whole Agile movement. For the last 10-15 years though, I have increasingly had the feeling that waves of technology were passing me by; for example all the different AJAX frameworks. Once I do start to get involved (e.g. with AngularJS and NodeJS) there is a huge learning curve to overcome and I labour to deliver stories as rapidly as younger colleagues who have been immersed in the relevant technology for longer.","There were many. Mostly they were  purists  in some methodology. I tend to share their enthusiasm for whatever formalism they espouse, but temper it with pragmatic choices.","Estimating how long any particular task will take. It seems to be almost random, because you can never predict how many technical snags you'll discover and have to overcome. The best we can hope for is to cut stories down to a size where they average out at no more than a few days each.",3,57,1,1,,85,5,1,,ANONYMIZED,Good luck with your research.,Europe,
3,40,48,20,6,6,An ability to focus on software; a wide experience of programming tasks; a broad interest in many different technologies; a clear logical mind; a sense of contractual responsibility; an ability to understand use cases; familiarity and experience of multiple languages; the ability to work in a team; the ability to explain and communicate; the ability to learn from prior mistakes; ,communication,coding/testing,organization,1,1,1,1,1,1,1,0,,patience; impatience; thirst for knowledge; logical mind; extrovert; ,"they should lend out their software developers to other friendly organizations on an exchange basis. Cross-pollination is a terrific way to improve skills. Far too often we live in ivory towers and don't know we are doing things badly. Failing that, regular attendance at technical conferences; training in new tools, languages, etc.  The mushroom farming style of management is very bad but all too common.",1,Unit test coverage tools; Software analysis tools; Performance testing; would like more tools.,"The initial design is fun, but what really is more rewarding is refactoring. Being able to modify that original design in light of new thoughts/requirements.",2,2,,,Keeping up with new technology. ,5,65,1,3,,65,5,4,,ANONYMIZED,"In my opinion, managers typically place far too much reliance on knowledge of a specific technology. An all-round ability to get things done is far more important because any new technology can, typically, be learned very quickly by a smart person.",North America,UnitedStates
3,41,40,3,6,4,"Is aware of all possible ways the software can be wrong - correctness, maintainability, etc. etc.","Simplify, simplify, simplify - clean design, maintainable structure","Fit the solution to the problem, including talks with users and understanding the environment",Know several tools of the trade and several approaches to solving the problems by software,0,1,1,0,1,0,0,0,,"Innate aptitude of software design and development.  Aptitude of software development should be measurable, among other things, by ability to grok recursion, pointers and concurrency.","The CEO, or at least someone with as much power as the CEO in his domain, must have a clue about software development.",1,"Keeping track of hours spent on modules (not always).  Using 'wc', counting the lengths of files in lines.","Ability to play with all kinds of novel concepts when learning programming languages and tools, and when designing software.",1,2,"Manifestations: too long time to finish tasks, wanting to go out of the project and transfer it to someone else.  Causes: burn out.",,"Mastering new technologies: new paradigms, new programming languages, new frameworks, new libraries.  Design for maintenance (both code and associated documentation).",4,59,1,1,,85,1,1,,ANONYMIZED,,Asia,
3,42,11,3,4,3,solution architect,Communication,Software development,Business rationale,1,1,1,0,0,0,0,0,,"Expressive, humble and adaptable",Pay well,1,"Customer feedback, peer review, static analysis tools.",Being paid,1,1,Performing the same daily work without a challenge.,An older project manager I was able to bounce ideas off when becoming stuck. He'd often make me reveal my shortsightedness.,Customers,3,,1,1,,40,6,2,,,,Oceania,
3,43,19,5,6,5,Understanding that you must strive for simplicity above everything else. ,collaboration,a humble attitude regarding the customer's domain,ability to quickly produce a working prototype for the current projekt,0,0,1,1,0,0,1,0,,"Intelligence, persistence an amount of robustness against stress",,2,,Working with something that keeps fascinating me,2,1,,Several skilled programmers has influenced me,Refactoring large systems and convincing other people why they have to do that,4,57,1,1,,90,5,2,,,,Europe,
3,44,30,5,5,3,Experience and simple designs,Understanding the requirements,Creating the simplest design to fulfil the requirements,Keep learning,0,1,0,1,0,1,0,0,,Constantly learing,Give developers the freedom to solve the problems they face as they see fit,2,,Code that make other peoples work easier,1,1,Mandated use of unnecessary technologies. Clients losing interest in a project causing it to stall,Good at explaining complex ideas in simple understandable terms.,Becoming a manager,3,54,1,3,,40,1,2,,,,Europe,
3,46,32,15,6,5,It is not only the basic knowledge gained from a college or technical school that makes the software development expert. It is a combination of that knowledge and actual experience in the field. Once you have learned the basics of programming you then have the ability to become an expert in any language all that is needed at that point is learning the syntax and libraries or functions of that language. This can only be obtained by experience with that language.,Mastering the Syntax of the language you want to be an expert with.,Mastering the Libraries or Functions of that language.,Mastering the Methods of programming and applying them to the language you want to be an expert at.,1,1,1,1,1,1,0,0,,"Having patiences, self discipline, and a desire to constantly learn are key character traits to becoming an expert in any language. As each new project is presented there are going to be challenges that require you to have great patiences. You might get stuck trying to get one section of code to work as specified. Programming is tedious and requires self discipline to keep moving forward with the project. I have programmed in the many languages for well over 20 years and each and every day I learn something new. It is this learning and applying that knowledge that makes the expert.",It is very important that employers understand developers are investments of the company. Allowing those investments to mature and grow through additional training and compensation as they grow are key to both growing the knowledge base the company has as a whole and in keeping that knowledge with the company who invested in it.,1,I use several metrics to monitor my software development activities. First I use systems that monitor time and offer snapshots of the code as the project progresses. I use project management software to set goals and to monitor progress on those goals. And I use repositories to keep snapshots of code. All of these can then be used to find areas that need improvement.,Each new project brings a new challenge. I love being able to take that challenge and turn it into something that the company can use.,1,1,In most cases a developers performance declines when they become bored with what they are doing. This is why it is very important to offer training and  new and challenging projects to keep the developers interest. As I said earlier it takes self discipline to be an expert programmer.,I have had several very key mentors who helped me. The first mentor had a doctorate and took the time to help me learn assembly language. The time he took to train me built foundations that have lasted a lifetime. The second mentor was someone that I consider better than myself in a programming language that I have many years of experience. Having him available to ask questions has greatly impacted my abilities.,The biggest challenge is in taking the time to dissect and master the language. Each project brings challenges but to be a true expert you must take time and learn everything about that language. Because we work long and hard finding time to become the master of that language and my skills is challenging. ,4,58,1,1,,90,1,3,,ANONYMIZED,It takes a special type of person to become an expert in any programming language. Energetic people who like to always stay moving is an example of someone who would find software development boring. Someone who can immerse there self into sitting for hours and figuring out creative ways to solve problems with software is the someone who could become an expert in any language they choose.,North America,UnitedStates
3,48,35,0,6,2,"A person who can quickly and readily put together a program that meets requirements by putting together snippets of code from various sources,  tying them together with their own glue logic as appropriate ",Software design that is easily maintain by other engineers,Coding,Testing,1,0,0,1,0,0,1,0,,Good teamwork.  Assisting other engineers as needed.,Cross training via Agile development practices and paired programming,1,Agile,Coming up with novel solutions that are simpler than others expected,2,2,,,Managing the expectations of management,6,59,1,1,,80,12,1,,,"My degree was in Theoretical Mathematics, not Computer Science",North America,UnitedStates
3,49,37,18,5,5,,Simplifying problems ,Envisioning outcomes of solution choices ,Finding errors and repairing them thoughtfully ,1,1,1,1,1,1,1,0,,"Creativity, introspectivity, awareness of process, language skills, musical experience ",Trust them ,2,,Seeing my software contribute to organizational success ,2,1,,Opinionated professor ,Organizations and their dysfunction ,4,55,1,3,,90,6,3,,ANONYMIZED,,North America,UnitedStates
3,50,35,5,5,4,"Someone who has accomplished big things. Someone who is good at overall planning and the execution of details - i.e., both strategy and tactics.",Envisioning the goal,"Writing understandable, maintainable code to achieve the goal",Communication (with people!),1,1,1,0,1,0,0,0,,"A love of solving puzzles, a desire to get to the bottom of things, a pride in good craftsmanship","Allot them time to improve, offer help, avoid judgment",2,,The satisfying click when a complex program falls into place.,2,2,,,Time pressure,3,55,1,1,,65,6,1,,,,North America,UnitedStates
3,51,30,0,3,1,someone who writes good code: code that runs well.,Documentation,the platform ,performance,0,0,0,0,0,0,0,1,Java is not on my radar. I use other languages.,focus,take out a subscription to MSDN and Pluralsight!,2,,the pay cheque at the end of each month (and the absence of P45s).,1,1,"I saw one guy go downhill. He got divorced and he went south. We helped him, for a while...",Two:  1. Dr Herb Simon - he motivated me to think.  2. Dr David Parnas - he showed me how to think.,Lack of time,1,65,1,1,,5,1,2,,ANONYMIZED,why java??,Asia,
3,52,49,0,5,1,The ability to map the problem to an appropriate structure for solution.,understanding the problem to be solved,analyzing mechanisms available,mapping mechanisms to the solution,0,0,0,0,0,0,0,1,no one has ever paid me to learn and work with Java,focus,provide a distraction free work environment - no open plan  pay for attendance at live training,2,,not being bored,1,1,idiots joining the profession with only training in  software  without a basis in the problems to be solved,an ugly man who imposed rigor on development of real-time software in assembly language,the hideous nature of C++,1,67,1,1,,50,4,3,,ANONYMIZED,It is always painful when I realize some needed software tool requires Java.,North America,UnitedStates
3,53,20,1,5,3,programming experience doing different things at several levels of challenge,writing code,testing code,understanding business requirements,1,1,0,1,1,1,1,0,,,,2,,"Solving problems, and seeing the results for users",2,2,,,,3,61,1,1,,70,3,2,,,,North America,UnitedStates
3,54,38,0,5,1,"Knowledge of some algorithms concepts (I mean, not specific to any programming language), ability to think in data structures and how to apply them to problem solving",Ability to quickly build prototypes,Be good at his/her preferred tools,Ability to adapt to new programming environments and paradigms,0,0,0,0,0,0,0,1,"I don't work with java and, frankly, I don't like it","Working in a team, but keeping good at working alone if the need arises","Let them dedicate some time to update their skills, preferrably with continuous education and/or by keeping a good library (eletronic or conventional).  Some meetings where developers would show how their approached a problem and how they solved it (monthly or bimonthly)  Always have someone experienced leading a development team. This person should  dirt his/her hands  also, not only act as a manager",2,,"Since I learned programming (when I was 17) I always had fun with it. It's a passion, so when I work I feel as if I'm playing.",1,2,"I saw many people get discouraged by the way things were changed by those in management positions (I work as a civil servant, our working place is ruled by politics). ",,"When things get too easy, I get dishearted. Challenging problems make me feel alive, like a child that gets a new toy.",1,55,1,1,,80,1,1,,ANONYMIZED,Thanks for the invitation to participate. Wish you success in your endeavor.,South America,
3,55,20,1,5,2,"Theoretical knowledge (data structures/algorithms, operating systems, etc) and practical knowledge - experience at getting code into production and maintaining it. Also expertise in troubleshooting and debugging ",maintaining perspective,writing readable code ,troubleshooting,1,1,1,0,1,0,0,0,,"emotional intelligence, persistence, good communication skills, ability to work with others ","Allow/require employees to work on varied projects using different languages, tech stacks, and tools ",1,I keep a diary of how I use my time,"Making things that work and that people use. Especially, but not limited to,  public web sites ",2,2,,,Getting work done fast enough,2,58,1,1,,100,7,2,,ANONYMIZED,,North America,UnitedStates
3,56,38,4,5,3,"An expert can capture the customer requirements, even if the customer doesn't understand them well, translate them into separable components, then select appropriate technologies to make each component.  An expert understands implications of choices for maintainability, extensibility,reliabilty, performance, scale, and speed-of-construction, and can make tradeoffs as needed",analyzing requirements,tradeoffs,guiding junior colleagues,1,0,1,0,0,0,0,0,,Curiosity  Pride  Dedication to the customer  Ability to learn from mistakes,"all developers should be required to submit code for review, and all developers, no matter how junior, ought to review code.  (I don't mean that newbies get to veto work of principal engineers, but they should see it)  ",2,,"what I like personally is when I build something elegant, but this is more important for personal projects than for professional work.  Elegance, per se, is not customer-visible",2,1,,when there were tradeoffs to be made he would always trace them back to the customer,"Noise.  When I started developing I had a private office with a door.  Gradually we have moved to shared offices, then cubicles.  It's very hard to concentrate amidst all the chatter",3,60,1,1,,90,2,4,,,,North America,
3,57,35,1,5,4,A general understanding of ways of mapping the problem domain into the solution space; and knowledge of the capabilities and limitations of the solution space.,Dependency management,Interface definition,Testing,1,1,0,0,0,0,0,0,,"Collaborative, social. Attention to detail. ","In order to develop these skills, there first needs to be a mechanism to quantify and measure them. Once they can be measured, various activities can be undertaken and their effect on the skills can be measured.",1,"Continuous integration, code-reviews, information radiators, chat rooms, automated testing","Seeing a problem get solved in a efficient, and ideally clever fashion.",1,2,My perception is that it was mostly related to environment. A change in environment resulted in a significant restoration of programming performance.,,"Remaining focused on the problem at hand at the moment, particularly in our very common  information firehose  environment where there are constant interruptions.",3,54,1,1,,60,3,1,,ANONYMIZED,I have a B.Sc. degree in Electrical Engineering.,North America,UnitedStates
3,58,30,0,6,1,Always question;   Ability to view the challenge from multiple angles and form a great approach quickly;  Knowing a language syntax well does NOT an expert make; ,Problem definition,Keen observation skills,Always the student attitude,1,1,1,0,0,0,0,0,,- Curious mind  - Tenacious Spirit  - Humble Character,"- support failure with encouragement (an expert has likely already administered the flogging)  - open learning atmosphere fueled by trade events, online classes and outside events (celebrate successes)  - encourage independant projects outside the current business model and discuss the successes and failures openly (this assumes the right people on the bus)",1,Code challenges  Peer reviews  ,- Giving life to something that has never existed since the dawn of time.  ,1,1,My biggest  performance  declines are in the periods when the platform or tech-stack changes;  ,My first  boss  as a professional engineer.  His way of looking at a problem was counter-intuitive to how I was thinking of it.  He took the time to explain his approach and how he viewed the issue.  His views were always on target.  I respected him exceedingly and wanted to be able to view issues from all the angles as he has.  He was always patient to explain the process.,"The ability to descern the noise from the value. New languages, new platforms, new tech stacks and new methods - constant change.  Becomming expert is almost impossible in multiple areas because of the rapid change.  Don't like something in a language, heck, create your own;  I believe the value of a developer is to create a solution to a problem in an efficient manner. In business that creates market advantage and has value, which allows the developer to get paid.  The  cool kids  want to use the latest tech (languages, databases, etc) - so keeping their need for  the cool stuff  feed while ensuring the business remains competitive and viable run a close second. ",4,57,1,3,,80,6,1,,ANONYMIZED,I miss my spell checker! ,North America,UnitedStates
3,59,38,0,5,1,An ability to properly understand the requirements of the software he is to develop. An ability to properly understand the system the software is to model. A good  understanding of the tools available to him and the ability to select the proper tools. This includes not only computer languages but also libraries and frameworks. An ability to  see the big picture . A willingness to adhere to language and programming techniques that have been shown to reduce the number of bugs.,Analysis,Design,Debugging,1,0,0,1,0,0,1,0,,Curiousity. Love of learning.,Allow time for self study and small side projects. Provide time and budget for ongoing formal training. Encourage mentoring.,1,"Break down projects into relatively small tasks, estimate the time for each task, then when the task is compare the actual time to the estimate. Use defect tracking and monitor the rate of defect injection during the development project. Look for common factors in the root cause of defects found and fixed.",Being able to create something of value to the customer out of basically nothing.,2,1,,This was an instructor with Learning Tree who taught two one-week courses I attended. Although the time was very short. this man's clarity of explanations and depth of knowledge had a tremendous impact on me.,"Schedule pressure in the latter part of the development project. Defects, design oversights, new features all require sometimes significant changes to the code. There's a perceived need to put in the quick and dirty fix rather than take the time to revise the design, refactor the code, etc.",2,59,1,1,,95,2,1,,ANONYMIZED,"Although I do not have a degree in computer science, I do have a Bachelor's degree in electrical engineering. I have a little experience with Java, but had your Dreyfus model question asked about C or C++ I would rank myself as Expert.",North America,UnitedStates
3,60,35,20,6,4,"Strong at abstraction, knowledge of fundamental algorithms divorced from any realization language",Converting a set of anecdotal data into an abstract pattern,Realizing an abstract pattern in a formal system,Figuring out why it's busted,1,0,1,1,1,0,1,0,,"Patience, curiosity, appreciation for grace and elegance","Not an easy question -  don't and plan for higher staff turnover, do and the annual raises get all messed up to keep up with market valuation -  its a fundamentally positive question for the employee but fundamentally negative for the employer in many cases -  I look at it as more expected behavior of staff and my issue is how to facilitate and fund so its a lever I can use and not a club to beat me with - in the end, I will almost always loose, i.e. the grass gets greener outside the company",1,Stack Overflow  :-),Puzzles,1,1,The usual case is those that aren't continuously learning are falling ever further behind,Mentors (many) and people who took significant chances on me (several)  -  Its the combination of good advice and a challenging problem that yields results,Increasing complexity and interdepencies of systems,5,55,1,3,,85,5,1,,ANONYMIZED,,North America,UnitedStates
3,61,20,0,5,1,"Writes modular code that's as complex as it needs to be, and no more... easy to read, easy to modify.",Grasping problem domain,Prototyping solution,Testing solution,0,1,1,1,0,0,1,1,"As I don't code in Java, all of the above with regard to other languages","Mentoring - having mentors, being a mentor.  Calm.  Inquisitiveness.  A sense of humor.",Provide time and opportunity to try new things.,2,,Watching something new I've written work well the first time.  Making things easier for users.,2,1,,"Friendly, calm, understanding the questions I meant to ask, rather than exactly what I was asking.",Keeping it simple.  Time to do it right the first time.,1,59,1,1,,100,40,1,,ANONYMIZED,"Though I don't write Java, (I write front end code), the questions you ask are pertinent to any software development.",North America,UnitedStates
3,62,28,1,5,1,Ability to translate problem/solution spaces stated in human language into problem/solution spaces suitable for turing machine execution.  All such translations result in filters having input/transform/output with or without state memory depending on the problem.,problem translation,algorithm choice,edge and corner case identification,1,0,1,1,0,0,1,0,,Patience.  Tolerance for frustration.  Meticulousness.  Talent for completing logical sequences.,"Just like found in the animal kingdom, prepare a safe place for play and encouragement of play without consequence.  My skills depend on my pursuing a personal project at home.  This project is converting neuron shapes into mathematical transforms.  It is playful, satisfying, rewarding, and forces my skills to the very edge of computer science.  It is a mistake to limit a developer to the problem at hand.  The resulting solution is limited to the imagination of the manager.  Playfulness improves the teamwork needed for a better solution.  Manager control is useful for some projects, but those are in a minority.",2,,"The ability to view the natural and human world both tactically and strategically with an orderly mind.  I often break standards of good engineering on purpose, and see the natural and human world as doing this also.",2,1,,Many mentors.  I was a member of the MIT AI community and many different modes of thinking helped me stress my own narrow views forcing me to widen them.,Breaking free of the didactic modes commonly accepted as  best practice .  I prefer to use COMPUTED GOTO and spaghetti code in lexers despite discouragement in the literature.  I get astonishingly good results; my lexers are both mathematically provable and far faster than competitors.  Even spaghetti code is not adequate to my goals.  I am working on a  confetti code  approach where tiny code fragments may be either local or distributed without significant performance deterioration if entirely local.,1,62,1,1,,100,1,1,,ANONYMIZED,"The specificity of  java  on the big question was very poorly conceived.  If you had left out the  java  and just asked about programming expertise level, I would be considered  expert  not  novice .",North America,UnitedStates
3,63,40,25,5,5,continous learning,grasp problem,identify usable architectural pattern,identify usable process pattern,1,0,0,0,0,0,1,1,,"tolerance, steadiness",too tough quietion for me,2,,understanding principles of broader scope,2,1,,i had more mentors who were good at some things and not so good at other things. in an era of social internet e.g. i follow a couple of bloggers whom i count as a mentor.,finding  a way to achieve real progress in the organizatios i'm working in,3,59,,3,,60,5,1,,,,Europe,
3,64,33,0,6,3,"To quote Knuth,  mostly the ability to shift levels of abstraction, from low level to high level. To see something in the small and to see something in the large .",architecting,testing,documenting,1,0,0,0,0,0,0,0,,"Patience, listening, truly caring to make a difference.",Allow time and funding for self-driven development and study (as in Google's famous  20% time ),1,"Testing-coverage measurement tools, logs' analysis","Helping people, making a difference",2,1,,"Like me, self-taught in programming, he had learned it at the school of hard knocks, and his tips and advice were a great shortcut for me.","Concurrency, as it's extremely hard to test systematically and thoroughly.",2,60,1,1,,50,8,1,,ANONYMIZED,"Why the Java focus? I don't do Java: Python, Go, C++, etc -- just not Java!",North America,UnitedStates
3,65,37,2,6,1,"very good overall view, good inlevingsvermogen ",good communication with the demander,"translate the questions into a good general structure, that is flexible",construct a good database structure,1,1,0,0,0,0,0,0,,"very patient, never giving up, always try to find a good solution, testing everything as good as possible","not to want to speed up to much the development proces, but investing in a good quality of the work, so that changing the program afterwards is not to difficult.   Taking the time to make a good documentation,",3,,"finding nice ways of doing things, making complex processes simple",2,2,,,"the adaptation to new technologies over time, trying to keep up with knowledge",2,56,1,1,,70,10,1,,ANONYMIZED,,Europe,
3,66,35,1,6,3,"Flexibility, willingness to make sure that code is not only working now but is maintainable.  Ability to listen to clients and work out what is really needed when the client can only say what they think they want.",Logic,Critical analysis of requirements.,Effective testing of finished code to demonsrate that the requirements have been met.,1,0,1,1,1,0,1,0,,Willingness to explore alternative solutions.  Empathy with the user.  Willingness to take risks inorder to deliver what is needed.,Require high standards and provide the tools to allow the developers to continually improve.  Shield de elopers from distractions.,1,Automated code analysis.,Creating a tool that lasts and is used willingly.,1,1,Over emphasis on delivery of new features at the expense of completion and consolidation of existing work.  This means that those who try to ensure that the code is of good enough quality to be maintainable are criticized for lack of productivity instead of praised for redfucing total lifetime cost.  This causes adecline in enthusiasm.,An external consultant who ran his own embedded control company and insisted that the code be written for humans first and machines second.,"Imprecise and shifting requirements, clients who cannot specify acceptance criteria.  Unrealistic deadlines.",3,60,1,1,,90,15,1,,ANONYMIZED,,Europe,
3,67,25,0,6,2,Ability to create or fix software according to requirements. ,understand requirements,fix software,test software,1,0,0,1,0,0,1,0,,Patience. Being able to stick to a task. Curiosity. Understand what is being asked.,Have interesting project. Pay their way to conferences.,2,,Puzzling out a problem. Getting things to work.,2,2,,,Determining what task has the highest priority for the business.,2,55,2,1,,75,6,2,,ANONYMIZED,Why did you concentrate on java when there are so many other programming languages like javascript and c#?,North America,UnitedStates
3,68,25,0,6,1,Clarifies requirements and maps them into code that can be easily modified as the requirements change.,Analysis,Design,Coding,1,1,1,0,1,1,0,0,,INTJ,Pair Programming,2,,Seeing code I have worked on doing its job,1,2,Bad variable naming that spawns more bad variable naming  Bad structure and design that does not get fixed so progressively gets worse  Clutter in code ('fluff' - stuff no longer in use but left in there),,Working with bad code,5,54,1,1,,100,3,2,,ANONYMIZED,All the java specific questions suggest that this survey has some purpose other than the declared one. Java is a specific language.,Oceania,
3,70,36,17,5,4,"intelligence, ability to complete undertakings good background in the full computing stack,willingness and ability to teach and learn, empathy",Problem solving,Design,Finishing,1,1,1,0,0,1,0,0,,"Concentration, enjoying a challenge, communication, self confidence abou software",Provide interesting work and the best appropriate tools,1,Sonar,Seeing the product in use,2,2,,,Estimating,4,62,1,1,,90,40,1,,ANONYMIZED,,Europe,
3,71,40,10,4,4,Someone who recognizes there is no such thing as an expert in software development.,Communication,Research,Analysis,1,1,1,0,1,1,0,0,,"The ability to communicate ideas, being a self-motivated learner, a mathematical background.",Provide time for developers to experiment.,2,,Watching your ideas take shape.,2,1,,A senior software architect with many years experience in the IT industry.,Balancing solitude. Some is necessary for thinking. Too much leads to isolation.,3,57,1,1,,1,5,1,,ANONYMIZED,"One aspect of software design/development that does not seem to to be touched on by this survey is the role of knowledge/expertise OUTSIDE the context of software development, but within the the domain of expertise relevant to the software under development. In my own work (both professional and as a hobbyist) I have found that understanding the topic being modelled is fundamental to getting the basic design right.",Europe,
3,72,35,3,5,4,Someone who can write code they can understand 5 years later.    WRT Task 2 below: A program is an expression of the requirements in a very exacting language. It's a little like telling a story. ,Establishing requirements,Expressing themselves.,Working with others.,1,1,0,1,1,0,0,0,,Ability to communicate and work with others.,In house courses were helpful for me as were knowledgeable mentors.,2,,Seeing something work! Much of my efforts have been in embedded systems that do things.,2,1,,A very knowledgeable developer who pointed out how doing things right the first time seemed like it took more time but saved time in the long run.,Often it is identifying requirements in a timely manner.,4,62,1,7,,95,3,1,,ANONYMIZED,WRT #21 - degree in Electrical Engineering. CompSci was not so wide spread back then.,North America,UnitedStates
3,73,25,1,6,2,"A deep understanding of operating systems, algorithms, programming languages, mathematics and how to combine them with some programming methodology such as Agile.",Planning a structure for software,testing,communication,1,1,1,0,1,1,1,0,,"The ability to focus one's mind on a single thing for a long period of time, attention to detail, willing to work hard.",Even if they are a single language shop they should encourage employees to learn new languages. Learning F# will make you a better Java programmer for example.,1,"I track how much finished, thoroughly tested, functioning code I have written and the time taken.",There is always something new to learn.,1,1,Not using some language or paradigm over time causes it to rapidly deteriorate.,He was super strict on things like including error checks for everything (like reopening a file that had already been opened and closed) as well as commenting code to an extreme degree.,Keeping up with a constantly changing landscape of technologies.,2,55,1,8,,90,5,3,,ANONYMIZED,,North America,UnitedStates
3,74,30,20,5,4,"Ability to view problem from multiple viewpoints, not only the programmers.  Ability to accept non-optimal solutions.  Ability to distinguish major issues from details.",Discuss intended use cases,Define concrete examples of uses and use them as test cases,Drive code using tests and examples,1,0,1,1,0,0,0,0,,"Flexibility, Focus and an ambition to always better oneself",Continuously ask what employees are doing to become better programmers and software developers.  Devise training session where deliberate practice can be conducted in small and focused batches.  Encourage talking classes and learning new langauges and frameworks.,2,,Getting to green as quickly as possible ;-)  Making the code fulfill the current tests and knowing that it will never fail without me noticing.  Talking about the users needs and investigating their *real* needs further into the project.,1,2,,,"Nowadays, getting time to do enough of it. I'm senior consultant and rarely get to actually program in my profession. Instead teaching, mentoring and coaching and running the business takes up most of my time. So programming is more of a strong interest in my spare time with hobby and open source projects.",4,60,1,7,,10,1,3,,ANONYMIZED,,Europe,Sweden
3,75,32,15,5,5,Experience,Analysis,Design,Coding,1,1,1,1,1,1,1,0,,Being able to focus and think logically,Support learning new languages.  Buying new books.,2,,"Problem solving, seeing something work.",2,2,,,Keeping up with the change in the industry.   The half-life of most programming skills is a couple of years.,4,59,1,3,,100,1,2,,ANONYMIZED,,North America,UnitedStates
3,76,12,12,5,5,A well founding knowledge level of all tools availables in the lenguaje in itÂ´s working,A good abstraction level of the problem to resolve in order to define the propper approach to attack it,A good tool to control versions,An excelent knowledge level to investigate possible problems/solutions that arise during the development,1,0,1,0,1,0,0,0,,"Patience, perseverence, love to what are you doing, and strong desire for research to stay up to date","Promote investigation, knowledge of new techniques, regular events to promote the sharing of experiences",2,,When a customer or user that is using your application makes a possitive evaluation of your job in relation to its expectations.,1,2,basically on changes in attitude to customer requirements,,"The requirements of the new projects are increasingly demanding, based on what customers watch and want to incorporate into their applications.",5,58,1,1,,85,2,2,,,,South America,Venezuela
3,77,25,0,6,1,"Someone who can take a problem, and work with others to generate a system that 1) solves the problem, 2) can be maintained in the future, and 3) can be extended for future needs.",analysis of tasks required for a projected system,"definition and coding of modules, APIs, and sub-systems that solve a requirement","debugging of systems, analysis of interactions of sub-systems, and documentation of findings.",1,0,0,0,0,0,0,0,,The ability to focus on problems. The ability to understand existing code. The ability to work within an existing framework. The ability to communicate knowledge about systems and interactions.,"Offer open peer evaluations, based on objective evidence. Use that peer evaluation to guide continuing education. Measure employee 'productivity' by objective rather than 'subjective' criteria.",1,"Bug report metrics, team goal feedback.",Seeing customers problems getting solved in a timely fashion.,1,1,"Programming ability is based on desire to achieve. In the early years, it is a sort of competition. As you age, you begin to realize that outdoing your peers isn't all that rewarding. Also, the amount of time you want to spend coding goes down as you develop other interests, such as family and friends. I found that I lost a significant amount of my focus as I became 40, and started using drugs such as ritalin to enhance my abilities. This is pretty common among older programmers.","My first manager. Coming out of school, I knew basically nothing about the craft of writing software. He spent lots of time teaching me the arts of debugging, modularity, hierarchy, and API design. I owe him alot.","Working with management, and interfacing with other teams in the company. I work(ed) at a large corporation (cisco system). My management wasn't really incented to do the right thing for customers, and teams were basically not very cooperative with others. Everyone was incented to build and maintain bureaucracies. This is much less prevalent in startup situations, but occured at the 4 large companies I worked at during my career (I'm retired). ",1,60,1,1,,60,8,2,,ANONYMIZED,Good luck on your PhD,North America,UnitedStates
3,78,20,0,3,1,"knowledge of algorithms, knowledge/experience in the programming language he uses, domain knowledge",coding,debugging,analysis of algorithms,1,0,0,0,0,0,0,0,,"Attention to detail,  hard work","courses when needed, tutoring/coaching",2,,seeing the software being used,1,2,,,,1,50,1,1,,10,1,2,,,,Europe,
3,79,23,1,6,3,"At the very least, an expert should have knowledge of the  Big O  notation - that is, knowing the relationship between the size of input data and the time and space requirements of various algorithms and data structures applied to that data; whether those algorithms and data structures perform in constant, linear, quadratic, exponential time and space, or by some other relation with respect to the size of the input data.","Breaking down large problems into smaller, more manageable ones.",Writing code that can be reasoned about and tested independent of a particular application or service.,"Root-cause analysis; there are always bugs, so one must know how to root them out.",1,1,1,0,0,1,0,0,,A love of solving puzzles and a passion for finding ways to make machines do something fun and interesting.,"Provide funds for continuing education.    Subsidize or fully fund membership in professional societies, like the ACM or IEEE.    Organize a regular group event (with optional participation), or allow employees to organize such events where coworkers are encouraged to share something new they've learned. I've seen groups at different companies hold  Technical Thursday  lunch-time meetings, both with and without direct support from the company.",2,,I get to collaborate with like-minded people who have a passion for creating new things.,1,1,"The decline I've witnessed has been due mostly to boredom from staying in the same job too long, and fear of losing one's job in companies that are in decline and laying off good developers and other engineers.","He was deeply knowledgeable about the company's main product and always creating new features. However, he would always take the time to listen to thoughtful questions. His answers generally did not solve the problem, but would show a possible path to a solution. It made work much more interesting and satisfying. Also, when I showed him that the code was acting in a really unexpected way, he would take great interest in it and show me some of the steps he would take to narrow down the possible causes. I learned much more from him than from others who would might insist on a particular solution before either one of us was sure we understood the problem.","What to focus on next. There are so many interesting things happening in the world that are driven by software, it makes it hard to choose sometimes. Of course, employers have a particular agenda, so that narrows down the choices for the work day. Outside of work, I like to explore aspects of software development and tools that aren't available to me otherwise.",2,55,1,1,,80,6,3,,ANONYMIZED,,North America,UnitedStates
3,80,25,8,5,5,"this depends very much on the scope a SW development expert is required to have to be enabled for a given work. The demands on him are quite different from working in a small team, where the expert is responsible for nearly everything, than working in large SW development organization, where the development work, following a formal SW development life cycle model (maybe a customized RUP) is more structured among experts and developers. So what is the main scope, for that study it is to characterize the work of a developers, a programmer. This experts need a good understanding of the to be used tool suite, the available frameworks, the architecture of this frameworks, about involved standards, pros and cons of various approaches i.e .NET, JAVA, API's and they should be able to implement when I give them a set of UML diagram, i.e. know about graphical notations. know about what a model expresses. After all, to execute, the need to be able to read the programming languages at least C# and JAVA like new's papers. They need to know how to implement unit testing and what the benefits are of test driven programming. ",know the framework to be used and the development tools provided by that framework,"deliver good structured object oriented code, interact with designers and architects","deliver, check-in to CM systems only what is unit tested and works",1,0,1,1,0,0,1,0,,"analytical capabilities, hard working, not giving up to early, a great deal of self education, be capable to read and make, find your way through, over or around hurdles, be able to work according a project plan (if any).",hire one or two software engineering process developers (as recommended by SEI CMM) responsible to work with the teams on findings and recommendations to reach the next higher level in the SEI CMM. A good level to reach is level 3 where CASE tools start to pay off.,1,"Basically and over all we work against our project plan. But that is broken down by myself. I have a weekly goal, which is either reached or missed. Then I argue for myself why I reach it or why i failed to reach it. Then I go into the planning of the next weeks goal, and try to find potential hurdles, split them into my own hurdles and the ones others may impose. Also try to find where information exchange with colleges is necessary. ",make something which really works robust,1,1,"I think there is no single reason. The question above describes almost sufficient facts which all have a negative impact on productivity. Not to forget personal problems which may occur at arbitrary points in time, unforeseen, where the head is at the missed girl friend etc. the process of being divorced. but then also, the SW industry develops  to much and too fast at an often very lousy quality. Jumping too fast to this new techniques, tools, frameworks, also at inappropriate time, i.e. middle in projects, makes a project late. Also getting new-hires on board late in a project is mostly getting you down without your own productivity and performance. Loosing the focus of what has to be done is a primary reason of performance degradation.","I was lucky to supported by a SEI CCM SW engineering process expert. With him I had to pass almost ever strong interviews before I was released to present to our clients and stake holders. He was a very strong teacher. So strong that I was saying him once. Why are you not doing it yourself? OK, hey, look, you did an excellent work, but be aware, if you pass me you will pass in the field all upcoming questions easy. Then I understood that part of the game. Good mentors are seldom.","10 years ago, it was when I had to make a Microsoft .NET WCF based web service client talking to a OpenVMS Java Tomcat AXIS2 web service engine and have long lasting user sessions supported. It was all about have the client talk over the wire the same protocol as the service engine talked. Inter-Operability between different OS and platforms is even today often underestimated and a complex thing.",4,66,1,10,"as I said: in small teams, as team leader, its a bit of each the team leader needs to know and execute, Architect, Designer, Coder, Tester etc. re-itteratively, incremental following a SW development life cycle.",80,4,5,"mechanical and electronic background, field support engineer at DEC, SW developer in the I18N environment, EAI Consultant, etc. ect. self made men.",ANONYMIZED,"There was a time when we had to know 5 methods to fulfill what UML / RUP does today. Again, good mentors and SW engineering process experts pay off.",Europe,
3,81,37,2,6,2,An individual who can translate WHO-WHAT-WHERE-WHEN-WITH-WHY into HOW,Interviewing => ask the wrong questions and you'll end up with garbage,translating => properly interpret musts/needs/wants,design,0,0,0,0,0,0,0,1,just another means to an end,"good communicator, pragmatic, trouble shooter, logical, tool independ knowlegde, being able to work for a common cause",freedom of speech and creativity,3,,getting a job done in the time given with friendly/fun interaction with a client,3,2,,,,2,54,1,10,senior software engineer,90,4,2,,ANONYMIZED,"What are the javascript questions about? JS is nothing more than a tool to get a job done and has little to do with software development. Don't make a tool the main goal, it narrows overall vision.",Europe,
3,83,35,8,6,6,Someone with both experience and knowledge.  Experience developing apps in a particular domain (such as gaming or e-commerce) so that they are skilled with the tools and have seen most of the common technical and architecture issues in that domain.   Also the person is knowledgeable about software development methodologies such as OOD or agile methods.,Writing code that works,Being able to troubleshoot software when it doesn't work,Being able to work with software that others have written (either other team members or 3rd-party software),1,0,1,0,0,0,1,0,,"persistence, detail-oriented, curious",allow 10% of time each week for side projects or learning a new framework.,1,A little,Solving problems.,2,1,,Someone with deep knowledge in a new area that I was entering.  Someone who took the time to write clean code.,"The numbers of layers in modern systems.  A developer needs to know xml, sql, html, http, javascript, css, build tools, testing tools, and a large number of frameworks and libraries.  The days of just a text editor and the Ansi C reference are long gone.",5,56,1,1,,90,10,1,,,,North America,
3,84,35,5,5,3,The ability to think in terms of programming algorithms and patterns. ,Translate ideas into code,Debug problems ,Break code into maintainable and readable chunks. ,1,1,1,0,0,0,0,0,,The ability to see and break a problem down into smaller problems until it's solved ,Provide meaningful classes in related fields ,1,Jenkins and unit tests,Solving the puzzles ,1,1,Lack of support and encouragement from management ,Passionate about software development ,Staying up to date and learning new things  while maintaining legacy code ,4,61,1,3,,90,7,1,,,,Asia,
3,85,30,5,6,2,"Apart from technical knowledge, communication skills are very important. Knowledge about processes, the domain he's working in, and project experience (scrum, kanban, the more the better).  However, you do not define what an SDE is: a programmer, a software manager?",Programming,Software design (architecture),project management (even as programmer),1,1,1,0,1,0,0,0,,Determination to get things done.  Team player  Curiosity and learning (whole life),"Build trust, let team members learn from each other.  Conferences and seminars  Freedom to try something new",1,Kanban statistics: speed  Quality metrics in our build process.,Seeing that my software fulfills a purpose and really helps its users.,1,3,"Self-observation: still reasonably good and fast, but no longer the  programming guru  when I was in my twenties.  Even more, I do much less programming, working mostly as a manager.",,"Working with people: forming teams, cooperating with customers, collegues and top management. Synchronizing all the people related to software (projects) to get real improvements.  This was true long before I became a manager.",5,56,1,5,,80,10,3,,ANONYMIZED,"Some terms are not defined: Software developer / development (where are you talking about programming instead?).   I don't understand the use of  Java . The maturity model you present has no reference to any programming language. Therefore, I answered quite differently there compared to your Java experience question some pages before.  All in all you should be specific: are you talking about programming or sw development? This is NOT the same.",Europe,
3,86,35,5,6,4,Adherance to published standards and best-practices.  Test-driven.  Ability to communicate requirements and solution verbally and in writing.,testing,coding,debugging,1,1,1,1,1,0,0,0,,Patience and perseverance.  Curiosity.  Attention to detail.  Self-motivation.  Ability to learn without requiring hand-holding.  Ability to collaborate and communicate with others.,"Encourage developers to contribute to Open Source (github, ...), publish professional blogs and articles, and if possible, set aside some fraction of time (20%) for independent projects.",2,,I feel validated when I learn that people are actually using my work and that it makes their work (or lives) easier.,1,1,"I become de-motivated by I'm given assignments that have weak use-cases, or when management does not value high standards such as test-driven, standards-conformance, and clean code.","The last guy as younger than me, but very dedicated.  I learned from him to always test for required behavior, not implementation.",estimating.,3,59,1,1,,80,5,3,,ANONYMIZED,,North America,UnitedStates
3,87,32,5,5,4,"Someone who can help others consistently. Someone who can write reliable, sturdy code. Someone who can ask the right questions of subject matter experts, really hear the answers and implement software that satisfies the needs specified. Someone who is neither arrogant nor believes that they have nothing more to learn.",Analysis,Software development and coding.,Testing,1,1,1,1,1,0,0,1,I quit using Java a number of years ago as I no longer considered it a fitting tool. I use Ruby and Rails now.,"Intelligence, humility, ingenuity, self-examination, awareness, the ability to work with others.","Listen to them. Be willing to scrap outdated code and tools (like Java, which has become too cumbersome and bloated). Encourage the development of their skills. Reward hard work and innovation.",1,"At my current position, we use Jira and agile pointing methods, comparing predicted effort to actual results.",Understanding the problem space and puzzle solving. All code is really a puzzle-- an attempt to trick a piece of silicon into executing the wishes of people with problems.,1,1,I know of a number of people who have  given up . They are no longer interested in honing their skills to become better developers. This usually happens around the time they achieve 20 years of experience in the industry. They are essentially exhausted and no longer find development challenging.,My first team lead (he was the leader and I was the team) had high expectations. He was always exploring technology himself and encouraged pushing the limits of what could be done. He was never satisfied with  good enough  and taught me the habit of feeling the same way.,Unreasonable expectations of management and subject matter experts when incomplete or inaccurate requirements are expressed.,4,55,1,1,,80,12,5,"I have a degree in Business Information Systems, but took a lot of courses in Computer Science. ",ANONYMIZED,,North America,UnitedStates
3,88,35,1,6,2,Able to understand the problem domain both quickly and in depth and then translate that analysis to a plan of action for solving the problem.,Active Listening/Questioning,Learning ,Communication,0,0,0,0,0,1,0,0,,Communication and problem solving,"Encourage (and fund?) conferences, meetups and online training tools",2,,The joy of getting things done.,1,2,"In older project, boredom sets in and the problems are more day to day rather than challenging.",,Learning to get up to speed quickly with new tools so that productivity remains high,4,63,1,1,,0,6,1,,,,North America,UnitedStates
3,89,30,2,5,2,"Willingness to try new things/approaches and have a good testing sense ( ya, this code compiles; but is it right!? )   ",testing,using tools / being lazy ,willing to start over ,1,1,0,0,0,0,0,0,,"Being open to new things/reading of new tools, utils, approaches. ","Allow time to  play  or fail at programming tasks and using new tools/approaches (TDD, BDD, Agile) ",2,,Watching your work do what you want it to do and make your customer happy. ,2,1,,She always said  You got to know your data...  which made me a better business programmer - altho not necessarily a better general programmer. ,Keeping what your goal is and that an 80% solution might just be  good enough.  ,2,58,1,7,,20,6,1,,,,North America,UnitedStates
3,90,35,18,6,6,"Knowledge of what goes on inside a language or system, and why it works that way.  It is not enough to be able to write a working program, one must understand what is happening on the interior of the computation. It also means that you know the limitations, pain-points, and traps that exist in the language or system. Finally, one must understand at least some of the theory.",communication,abstracting design from the requirements and conversation with stakeholders,"write clean, testable, maintainable and extensible code efficiently",1,1,1,1,0,0,1,1,my communications skills with technical and non-technical people,A thirst for knowledge. A pragmatic approach. An open mind,Support continued learning and training. Encourage research. Offer personal project time. ,2,,Exercising my creativity,2,1,,A very good and knowledgeable developer who had been around long enough to have seen it all.  ,Fear on the part of management. Below average developers. Keeping up with the pace of change in the profession.,5,56,1,1,,80,5,1,,ANONYMIZED,,North America,UnitedStates
3,91,40,0,4,1,,,,,0,0,1,0,0,0,0,0,,,,2,,,1,2,,,,1,62,1,8,,2,1,1,,,,North America,UnitedStates

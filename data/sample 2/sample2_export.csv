sample_id,participant_id,q1_experience_general,q2_experience_java,q3_expertise_general,q4_expertise_java,q5_characteristics_expert,q6_task_1,q6_task_2,q6_task_3,q7_java_rating_time,q7_java_rating_prof_exp,q7_java_rating_depth,q7_java_rating_breadth,q7_java_rating_project_size,q7_java_rating_other_devs,q7_java_rating_trans_know,q7_java_rating_other,q7_java_rating_other_data,q8_traits_behaviors,q9_employers,q10_monitoring,q10b_monitoring,q11_reward,q12_decline,q13_mentor,q12b_decline,q13b_mentor,q14_challenging_problem,q15_dreyfus,q16_age,q17_gender,q18_main_role,q18_main_role_other,q19_work_time,q20_team_size,q21_degree_cs,q21_degree_cs_other,q22_purpose_github,q23_account_github,q24_email,q25_remarks,participant_continent,participant_country
2,1,6,5,5,6,"A software development expert is someone who can identify software design risks and pitfalls, and avoid them, as well as correctly architect solutions for specific requirements. They should be able to reason about software they haven't written or seen before, and recognize software patterns in many languages. Code written by a software development expert should be as simple as possible to solve the given problem, as well as be maintainable as possible. ",Identifying and avoiding common mistakes in software design and implementation,"Write good software, with a strong emphasis on testing and correctness",Write software that is as simple as possible and maintainable as possible,1,1,1,1,1,1,1,1,Experience with working on Java projects that involve a large number of developers writing code for the same codebase,"I'm not certain there are any specific traits that are required, but the one most likely seems to be a willingness to listen to outside opinions.","Employers should ensure that software developers spend time learning new skills or programming languages, reading software engineering books (e.g Mythical Man Month), and encouraging learning.",2,,Creating something new or solving a hard problem.,2,2,,,Naming things,5,25,1,1,,90,5,2,,2,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,2,9,9,4,5,,understanding the problem to be solved,understanding the end user needs,APIs,1,1,0,1,1,0,0,0,,"Passion about what you do, and never stop learning","they give us a lot of freedom to do what we think is best, and we train ourselves to be better",3,,it is a very creating job,1,1,work related tasks tends to demotivate people and team. Also politics inside the company usually tend to affect the people involved in different projects.,a very senior guy that can see way a lot into the future of our project and his main responsibility is to create the vision for our work (a team of 40 engineers),keep learning and adapting is really challenging ,5,32,1,1,,100,40,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,3,10,6,5,5,"An expert developer is able to use their experience to design and implement a project that best fits the stated problem. This means understanding the scope of the project and the requirements, and producing a solution that matches them. The resulting code should be efficient and easy to maintain.",understanding the requirements,designing the overall architecture,a good knowledge of the algorithms in their domain of expertise,0,1,1,0,1,0,1,0,,An expert should be inquisitive and eager to learn new concepts throughout their career. An expert is good at mentoring others as teaching is an excellent way to test ones own understanding of the material.,"The employers should trust their technical experts to make decisions regarding technology and the architecture of the software. The employers should encourage experimentation, such as he example of Google's 20% time, where employees are encouraged to work on their own projects.",2,,I enjoy seeing my software used by others.,2,2,,,"I think building large applications that have to be maintained for many years is a challenging problem. The requirements often change throughout the lifecycle of the applications, and the team members supporting the application come and go.",4,37,1,1,,80,3,3,,4,ANONYMIZED,ANONYMIZED,,North America,
2,4,18,12,5,5,The ability to turn a real world problem into working code,Problem solving,Learning new things,Working in a team,1,1,1,0,1,0,0,0,,"Curious, fast learner, ready to think outside the box, healthy skepticism","Encourage developers to work on pet projects, read books, go outside their comfort zones and try new things in real projects (with an experienced mentor).",2,,"The flow; when everything falls into places and just works, and when users are happy.",2,2,,,"Tight deadlines, problematic customers, too boring or too hard tasks",4,32,1,3,,85,3,3,,4,,ANONYMIZED,,Europe,
2,5,32,17,6,6,"Experience in full lifecycle software development, hands-on expertise in current programming practices including modern programming languages and associated eco-systems, testing, CI/CD, source control. Ability to solve functional and non-functional requirements and operational concerns (performance, high availability, scalability, fault tolerance).",Programming,Testing,Debugging,1,1,1,1,0,0,1,0,,"Analytical and problem solving skills, passion for technology and continually learning new things, attention to detail, tenacity to overcome challenges to get software to behave correctly, solid communication skills, willingness to collaborate.","Organize into small (two pizza) teams that have complete responsibility for a product or feature (team work, exposure to full breadth of software lifecycle, autonomous decision making)  Rotate people among different teams as necessary (expose them to new things, knowledge transfer),  Pair Programming (knowledge transfer, and collaboration)  Encourage Technical Training, Conferences, etc.  ",2,,Implementing and helping others implement useful solutions,2,1,,Enormous intelligence and deep general knowledge of computing,Making the right compromises to make simple things simple and complex things possible,4,61,1,3,,100,1,2,,4,,ANONYMIZED,,North America,UnitedStates
2,6,25,0,5,1,care for details,write good code,,,0,0,1,0,0,0,0,0,,analytical mind,,2,,,2,2,,,listen to other,1,55,1,1,,90,1,2,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,7,5,5,5,4,Someone who knows how to efficiently turn a requirement in a high end feature.,requeriments analysis,software design (principles and design patterns),coding,1,0,1,0,1,0,0,0,,perfectionism and innovative non conformist attitude,,1,"Using hours counter, task managers and project management tools",Build tools that helps people to do their jobs or bring value to stakeholders ,1,1,"having really much non challenging work (work environment, assigned tasks)","Someone who drives me to look for more, to learn more, to research for better solutions.",understand users needs,3,25,1,1,,80,20,1,,2,,ANONYMIZED,,North America,
2,8,6,3,5,5,The ability to manage complexity,Change management,Algorithms / Data structures,Architecture design.,0,1,1,1,1,1,1,0,,"Highly self-motivated, focussed. The ability to absorb new information at a high rate. Not being satisfied with answers without supporting evidence.","Treat them like adults, treat them like experts in other fields (ie law, accounting).",1,What rate of implementing new features / fixing bugs in change control system. Introspection: what have I learnt this week that I didn't know last week?,Saving people from the tedium of things that can be automated.,2,1,,An expert that had run large software efforts in the past.,People.,5,33,1,1,,100,5,1,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,9,7,5,5,5,,Logical reasoning,Transferring ideas to code,,1,1,1,1,1,0,0,0,,,,1,"Github (and equivalents) for quantity, jenkins/sonarqube for quality.",Solving a problem or getting a good algorithm to run.,1,2,"Less interest in programming, as I got more swamped with university work.",,,4,23,1,9,,25,1,2,,4,,ANONYMIZED,,Europe,
2,10,18,15,4,5,"Understanding language features and tradeoffs, using tools where necessary, proper testing.",Design,Testing,Refactoring,1,1,1,1,1,1,1,0,,"Persistence, flexibility, curiosity.","Nothing,",2,,Correct output.,2,2,,,Working with other people.,4,39,1,1,,80,10,1,,2,,ANONYMIZED,,Europe,
2,11,6,5,6,6,"ability in   -designing the software with maintainability and extendibility in mind  -be able to understand, refactor and profile code (maybe written by other people)   ",design,debugging,profiling,1,0,0,1,0,1,0,0,,"optimism, team-spirit, curiosity","propose challenging tasks, encourage the employees to explore new ideas, value the quality of the work not only looking at the results",2,,Developing something which I think is well designed.,2,2,,,good designing,5,25,1,9,,70,2,2,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,12,10,4,5,4,Broad expertise with one field of deep-knowledge ,Prioritize ,Programming,Abstraction,0,0,1,0,1,1,1,0,,"play instinct, kindness, ",Give them time to do so. ,1,"Development diary, metrics","Create something new, which does not exist before.",1,1,Unsatisfying job,Genius in C++ programming and low level hacking. ,Bad infrastructure/tooling,4,28,1,1,,60,25,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,13,5,3,3,3,Solid and complete understanding of CS concepts and an deeper understanding of languages.,Designing correct solutions,Implementing solutions,Writing semantically correct code,1,0,1,1,0,1,1,0,,,,1,WakaTime,"Solving problems, diving into a project",2,1,,Provided guidance for implementation when I was unsure which implementation is  better ,Naming things,3,,,9,,0,1,1,,4,ANONYMIZED,ANONYMIZED,"Writing in surveys is hard - the more  select an answer,  the easier and more complete a survey will be",North America,UnitedStates
2,14,13,10,4,5,"Understanding that quality code/software is about a great deal more than  whether the code works  and having the ability to build software that also accomplishes other goals (such as maintainability, extensibility, usability, etc) ",Black Boxing other developers' work and using it at an API level rather than learning everything about what they've done,Architecting software in a way that allows flexibility in project requirements and future applications of the components,Programming/Coding (actually getting a computer to *do* the task required),1,1,1,1,1,1,1,1,Private projects,The ability to put yourself in the shoes of a user of your software,"Encourage developers to participate in exciting projects outside of their direct job duties (hackathons, side projects, etc)",2,,Knowing that I've made a technology/product/library available to an audience that previously would not have been able to use/experience it.,2,2,,,Finding the right balance between maintaining standard among a team of developers and allowing creative freedom,5,23,1,1,,95,2,2,,2,,ANONYMIZED,,North America,UnitedStates
2,15,31,11,6,6,"Broad and deep understanding of what makes computers and software work, at all levels of the stack. Ability to choose the right tool/language/library for the job. Ability to abstract away from specifics of the problem to find an elegant and general solution.",listening (requirements gathering),design / architecture,coding,1,1,1,1,0,1,0,0,,Ability to focus on one thing for long periods of time. Abstract thought. Reading lots. Broad interests. Find programming fun and do it in own time as well as work.,"Set aside time for education (e.g., courses like Coursera, internal and external conferences). Mix people around - move people from team to team or company to company.",2,,Seeing my code used in the real world.,2,2,,,"Finding creative approaches to resource constraints (i.e., at architecture/design time, finding a way to do less but still keep the customer at least as happy)",5,41,1,3,,100,20,4,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,16,10,14,5,6,"In my opinion, a software development expert must have a critical eye for product architecture. Being able to discern the differences between early optimization and important design decisions for the long term goal is a rare talent.",Realistic goal setting,Effective use of time allotted to programming,Communication (both in speach and programming),1,1,1,1,1,1,1,0,,"I believe that to be an expert in anything, and software development is no different, one must be excited to hone his craft. As an expert woodworker is excited to learn how to best use his tools, a software development expert must be excited at the prospect of new challenges.","Incentives will advance all programmers to a certain point, but unless an employee is internally driven to learn and expand his software development skills I do not believe an employer can do anything to improve matters.",2,,The most important part of being a software developer comes when I do self assessment in the form of code review and am pleased with what I see.,1,2,"Software development is an exciting career and in the beginning there are many challenges that are new and fun to solve. That said, it is still a part of a business, and most businesses do not stray from a few related clientele; therefore, many developers will work on the same types of software over and over again. After a handful of years, the problems are no longer new and exciting, but merely exercises in the craft. Additionally, as in most businesses, after some time and successful experience many programmers move up in the ranks and are no longer performing the day to day software development; they have moved into management or project lead roles which usually means less time spent doing these exercises to maintain their level of skill. Others may be satisfactory programmers, but not have the drive or incline to move into management and with many years of the same types of puzzles they become lazy.",,"In my experience, and from what I can tell about other businesses this seems to be true across the board, the most challenging problem is that of communication. In software development, the issue of communication manifests itself in several ways: explaining technical issues with non-technical persons; effectively explaining a solution to a problem using nothing but the programming language (e.g. zero comments but a simple to understand hunk of code); and communicating requirements between and among teams of fellow developers. Every developer worth his salt can, when communicated well, build the correct system given enough time and the proper tools; it is in the ability to communicate the requirements that challenges tend to arise.",5,32,1,3,,50,5,2,,4,,ANONYMIZED,,North America,UnitedStates
2,17,7,7,6,6,"Wide range of programming languages and good knowledge of standard development tools. The first in order to be able to find the best solution available for the current problem you want to solve, the second to avoid wasting time on implementing stuff that was already done by many others, e.g. know the APIs available, use tools like git, maven etc to manage source code and dependencies etc. Also in my opinion, the less programming languages and/or development tools you know the more you will try to solve different kind of problems with the same approach, which might not always be the best solution.","Writing clean, readable and easily maintainable code (use standard patterns, solutions, etc.)",Abstraction of real world problems - you should be good at transferring real world problems into abstract problems - to be able to solve problems that you might not be familiar with contentual wise,"Good communication to non-IT people, to be able to assess and (if necessary) rethink customer needs and proposed solutions from non-IT people",1,1,1,1,0,0,1,0,,"I'm not sure if this is really a good question. By defining  important / supportive  traits you limit the diversity of people working in a specific field (not just applicable for IT). So you might loose different perspectives on problems or different approaches the more homogenous your staff is.  Non the less, I think it might be helpful to have interest (and ability) in abstraction and logical thinking. But I think this also varies from specific tasks in IT.","Try not to put limitations on the software/programming language/tools that an employee is supposed to use to solve a problem. I think (in white collar work in general maybe) it does not help to put time pressure on the people. At least in my experience I find better solutions the less deadlines I have, because I know I can take (at least some) time to think about new approaches or to try out other tools or programming languages (which can be of course a waste of time sometimes, from a  project perspective)  I also think it helps if a portion of the employees time can be used to work on own ideas or at least outside of projects (maybe related to the branch of the company, so that once in a while even new products or solutions may arrise - but without that being the goal). This way you can try out new ways/approaches without having to be productive (which can limit your ability to rethink things from a new perspective)",2,,"Developing software that I think is helpful and seeing that this software is used by people - and they actually like to use it, by choice, not because they have to.   So solving an existing problem and reaching the right kind of people to make their work easier is definetly a good motivation for me. ",2,1,,"One of my co-workers, who has a very strict view on code conventions - he  made  (or still makes) me rethink approaches and kind of prevented me from becoming a developer that always uses the same set of tools to solve a problem. Also my understanding of code structure, readability and maintainability has deeply improved through his comments or discussions we had","Communication with Non-IT people - in the way that it is sometimes challenging to convince someone with an idea that it might be better to rethink an approach. e.g. taking time for code refactoring etc or using specific platforms/tools. If people don't have IT knowledge they tend to not understand the necessity and/or complexity of solutions that look easy from an outside perspective. My favourite quote from a former boss was  Why does it take 30 days to implement 2 views on a webpage - this should be done in a week tops  - where each page was really complex and had many functionalities (and had to be integrated into a bigger software solution,- backend, middleware etc). But from his perspectives it was just some input fields, texts and buttons.",5,30,1,1,,66,2,1,,3,,ANONYMIZED,,Europe,
2,18,9,1,5,2,"Someone who knows the ins and outs of computing, and is able to break a large business problem down into smaller ones, and find ways to build a technical solution that is scalable and flexible for the future.",Breaking larger problems to smaller ones,Communicate effectively,Understanding how computers operate and communicate top to bottom,1,0,0,1,0,0,1,0,,Tasks in question 5,"A pace that encourages thorough breaking down of problems, conferences, time to hack on fun new languages and problems",1,RescueTime,Seeing a problem being solved (the end result),1,1,"Often it's level of interest.  A lot of software jobs focus on pushing features, and that burns people out.","A very patient man that didn't make me feel like an idiot when I didn't understand something, and would pair with me often to solve problems.","Not getting overwhelmed at sizes of certain problems, usually in domains I don't understand as well.",2,25,1,1,,100,5,2,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,19,9,4,4,2,"passion, wanting to learn, wanting to solve problems",problem solving,debugging,teaching,1,0,1,1,1,0,0,0,,being a leader is good but you have to be able to accept being wrong. Team work,Have employees work on projects with new technologies,2,,solving a difficult problem,1,2,My fellow employees. And was simply due to the work environment and no having hard deadlines,,Tying multiple new softwares together,2,22,1,1,,80,9,2,,4,ANONYMIZED,ANONYMIZED,"I look forward to what information is found :) It seems to be primarily toward Java, while I am a JavaScript developer",North America,
2,20,6,6,4,5,A person knowledgable in creating and maintaining efficient and correct software systems,Designing effective code architectures,Writing tests,Debugging code,1,1,1,1,1,1,1,0,,Attention to detail,Expose employees to new techniques and technologies,1,I use tools like FindBugs and Checkstyle,Solving difficult problems and seeing the impact of my software on individuals,2,1,,A previous manager,Solving problems in such a way that functionality can be added in the future without rewriting old code,4,21,1,1,,80,1,2,,2,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,21,11,9,5,5,"A software development expert must be real good at software designing (object oriented, functional), curious and willing to learn constantly. He also has to know when compromises are required, and have to be a leader/mentor who is always at the service of his team.",Software Designing,Communication,Team Leading,0,0,1,1,1,1,1,0,,"Patient, open to criticism, and willing to learn","Employers should understand their devs, know their goals and help to achieve those.",2,,"I like to release good, stable and maintainable products.",2,1,,,Mediocrity. Some software developer should just quit their job and start something else. I can't stand the lack of ambition and people who don not want to improve their skills.,5,34,1,1,,90,2,2,,4,ANONYMIZED,ANONYMIZED,,North America,
2,22,4,3,4,4,- Good Architect  - Knows the language they work in  - Writes simple code,Designing solution,Writing simple code,Teaching & Learning the language,1,1,1,1,1,0,0,0,,Eager to learn  Open to criticism,Have the good ones teach the bad ones,2,,"Designing and implementing a software solution that meets specs, is easy to maintain, and performs well",2,2,,,Maintain a codebase,3,28,1,1,,90,3,1,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,23,10,8,6,6,"Someone who is conversant in not just their language of choice, but in the metaverse surrounding their language (developments, controversy, etc.). Someone who can adapt to changing requirements quickly and without needing full-rewrites of their code base. Someone who implements best practices as often as possible, even if it means ripping out old, bad ones.","Writing clean, standards-compliant code",Version controlling their software,Understanding and adhering to requirements,1,1,1,1,1,0,1,0,,"Attention to detail, a desire for improvement, a problem-solving mindset, a good deal of patience, and an insatiable curiosity. Oh, and a high WPM (words-per-minute typing speed).","Do not let employees get stuck in a rut of just writing in a single language. Involve them in projects that bring them slightly outside of their comfort zone so that they are forced to learn new languages and new practices. But first and foremost: LISTEN to them and UNDERSTAND when they tell you that something cannot be done or would be time-prohibitive to do. They have done the research, and they are giving you an honest opinion. Forcing them to fill a tub using only a bucket with holes in the bottom is a pointless, frustrating exercise.",1,"Every so often I will peruse my commit logs and view the branch tree of my git repositories. I of course keep up-to-date on the issues being filed against my code. The fewer issues there are after a new release, the smoother the release went. I have attempted to integrate continuous development before, but none of my projects have been big enough to date to justify it.","The feeling that one gets after fixing a particularly tricky bug, or after finally getting a feature to work correctly after hours and hours of effort. I would equate that feeling to the feeling a mountain climber gets once they reach the summit of Everest.  I'm the king of the world  becomes  I'm the king of Hello World , to say the least.",1,1,"I have met far too many programmers in my day that do not care about the appearance or performance of their code. They believe  if it works, then I'm done  and they take no time to optimize or clean up after themselves. As a result, their code bases get larger and larger and more and more bloated and spaghettified. Most of the developers that I work with are my age, so I cannot speak to age-related decline of mental acuity.","Hah, the mentor I had was a complete ass. He was a full-time employee at a company at which I was an intern, and we were working on a project together. He demanded a level of perfection I have not seen replicated in any software project before or since. He truly challenged every decision I made, and scrutinized every line of code written. If it was bad, poorly-thought-out, or messy, it was removed and rewritten, no excuses. He was harsh, but he changed the way I write code to this day.","I often find myself frustrated by the  language barrier  between clients and developers. If you haven't already seen it, look up The Expert on YouTube; it is a short comedy sketch about a client that wants an obviously impossible requirement fulfilled, but the impossibility of it seems to only be apparent to the developer, despite his attempts to explain it. I often find myself extremely frustrated when project managers and salesmen over-promise on features that we cannot deliver or (worse) plant ideas in the clients head about features that would be extremely cumbersome to implement.",5,22,1,1,,100,3,1,,2,ANONYMIZED,ANONYMIZED,Thank you for reaching out. It was a very informative experience to answer these questions. I hope you find some interesting trends in your data.,North America,UnitedStates
2,24,25,16,6,6,"effective, good at mentorship, can give good advice, build stable, well structured and maintenable system",build stable and maintenable system,Good advicer,Know in which direction the IT branch are heading,0,1,0,1,1,0,0,0,,patience curious adaptive,inspire developer to went to conferences attend to java community and think out of the box ,2,,Just follow the evolution of the software. To see happy users when you have deployed features in production ,2,2,,,Sometimes its hard to describe for system owners that they need to do some upgrade under the hood.,5,50,1,1,,75,3,1,,4,,ANONYMIZED,,Europe,Sweden
2,25,12,4,5,4,,Breaking programs down into small pieces that can be easily created/comprehended,Debugging,Logic,0,0,1,1,0,0,1,0,,,,2,,Being able to create my own tools,2,1,,"He was a very good troubleshooter, and was very good at breaking problems down into their logical pieces to help gain a deeper understanding of the task that was at hand.",Naming things,4,30,1,1,,100,5,1,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,26,6,2,5,3,"The abilities to construct good and reliable software, to write good code (of easy maintenance), to point failure candidates when facing a bug, to know solutions to common problems on software development.","Alternative thinking (think out the box), to take the environment in consideration and put himself in the user's place (empathy)",Write good code (readable and with good performance),"Know the technologies he's using (the language, the compiler, the OS, the web server, the database engine, etc)",1,0,1,0,1,1,0,0,,"Alternative thinking (think out the box), curiosity, empathy, interested.","Give space to innovation and new ideas, hear to the technical opinion of the experts, put the developers in contact with customers (it's actually good to develop empathy).",2,,"Build different products, that can be used on almost every area of knowledge, improve the companies' production performance.",1,2,"I perceived an increasing procrastination in me and in my colleagues, by working on the same tasks over a relatively long time (let's say, 6 months or more) without innovation and environment changes. Maybe we need to change the environment/technologies from time to time to keep the productivity... I believe that I like to learn new things and start to see the new things as the  greener neighbor grass  as I get used to the technology we are currently using.",,"Security. Mainly, how to build secure software and how to fit in the project budget.",3,22,1,3,,70,3,1,,2,ANONYMIZED,ANONYMIZED,,South America,
2,27,3,2,4,5,write code that loosely coupled and highly cohesive.,debugging,attention to detail,have a good idea of overall architecture,0,0,1,1,0,0,0,0,,,conduct continuous code reviews,1,running code quality tools  peer reviews,satisfaction,2,1,,review my work  show the bad practices  give the guidance,define proper APIs which last long enough,4,28,1,1,,60,10,2,,4,ANONYMIZED,ANONYMIZED,,Asia,
2,28,15,10,6,6,,"conceptual software design (ie, thinking in components)",complexity theory and data structures,"programming language concept, compiler internals, and actual code execution (ie, runtime behavior)",0,1,1,1,0,0,1,0,,"logical thinking, ability to understand abstract concepts, like puzzles and riddles, being patient (for debugging ;))",work actively on software project (in an environment were most people are more experienced); read good books about software development; watch available conference talks online,2,,people use and like what I build,2,1,,There are multiple: (1) Supervisors in industrial internships. (2) older (more experience) colleagues at University ,Working on distributed systems or multi-threaded components.,4,33,1,1,,0,15,3,,3,ANONYMIZED,ANONYMIZED,,Europe,
2,29,20,20,6,6,"Someone who understands the trade-offs with respect to design, maintainability, performance, etc. and can produce quality code that matches the desired requirement/capability in the quickest time possible. ",Software architecture/design,Prioritization,Communication ,1,1,1,0,1,1,0,0,,"Attention to detail, ability to think abstractly, ability to take a specific problem and see the generic pattern that should be applied. ",Allow developers enough freedom to pursue their own personal improvement or education. Employer-sponsored training or education rarely helps the most talented developers.,1,"Using issue tracking software (JIRA) and metrics from revision control (Git) in addition to unit tests, code coverage tools, etc. ",Helping a customer/client/end-user with a problem and delivering a solution that makes their life easier. ,2,2,,,"Finding time to focus on the most difficult programming problems without being distracted by other meetings, etc. ",5,39,1,3,,75,40,2,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,30,4,3,5,4,He solves problems.,Resolve problems,Knows how to identify a code of quality,Knows where to search what he doesn't know,1,1,1,1,0,1,1,0,,Knows how to search and how to use it.,Improve the readability of their code and always search for easier ways to handle a task,1,Tests and lints,Be able to build stuffs,1,1,,,,4,23,1,1,,,10,2,,4,ANONYMIZED,ANONYMIZED,,South America,
2,31,3,0,3,1,"The ability to come up with an architecture, handling corener cases, anticipating problems and thirst to learn every single day.",Architecture,Anticipating Problem,Coding,0,0,1,0,0,0,0,0,,Willing to learn,hackathons and books,2,,The fealing of creating something,1,1,decline in frequency of coding,"Hadnles corner cases, quick, learns quickly.",Bad documentation of a feature or product I want to use,1,23,1,2,,60,3,3,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,32,27,15,6,6,"Intuitive grasp of the right algorithms and data structures to use to attack a problem, and understanding of the advantages and disadvantages to each potential solution. The ability to communicate those ideas and produce code that is clear, maintainable and has low defect rate.",class and structure design (low level architecture),writing maintainable code,communication,0,0,1,1,0,1,0,0,,I believe only some people have that potential; I have never seen someone become expert unless they do it pretty much immediately on starting their work as a professional. ,Core abilities cannot be improved; employers should work on communication skills and empowering their experts. Basically it's a better plan to find good people and leverage them rather than try and make an OK programmer an expert.,1,Defects / LOC  Time taken to complete a story versus time planned,"Designing a unit of software that works well, is clear and get used by someone else to solve a problem",2,2,,,"explaining technical issues to people with limited technical skills so they can make decisions. It is sadly common to find people in management roles who don't take technical advice, or believe their technical skills are better than their technical advisors.",5,48,1,3,,90,3,1,,3,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,33,10,8,6,6,"- knows best practices and patterns  - good overview of technologies (not just plain language, but libraries, standards)  - can handle concurrency (threads, synchronization, immutability)",debugging,reading other's code (for peer review),looking up solutions on google,1,1,1,1,0,1,0,0,,eagerness to study more  ,change projects (e.g. after 2 - 3 years) so that developer can explore new area,2,,"I can be creative, sort of complicated problems",2,2,,,Heisenbugs that appear in production code but cannot be revealed with logging / when debugging.,4,28,1,1,,95,5,3,,4,,ANONYMIZED,,Europe,
2,34,4,2,4,5,Be a good listener during requirement gathering  Take time and anyalyse every aspect of requirement.  Create better design after analysis of requirements  After better design of software you will execute implementation plan with your milestone,Software design,Implementation of software design ,Deployment of software,0,1,0,0,0,1,0,0,,Better understanding of real time problem  Visualise requirement as lay man user   Try to achieve define your milestone,Provide Good mentor  Give liberty to employ for thinking out of the box  Identify your employees skill and weaknesses,1,Milestone tracking tool   Time tracking tool like wakatime   Monitor your deployed software bug ,I am enjoying solve real life problem .  Work stasifaction   Make good money,2,1,,"During my acedimic I was work with few professor.First Sourish das (DAIICT) , he is very helpful for becoming me as software developer.he has really good knowledge of algorithm and oop concept. I was learned more from Sourish.  Second one Asim banergi .he teach me software engineering principles as well as how to handle in pressure situation.  Also I was learned more from my former colleagues and friends Nayan Srivastava.  Right now I am working with him in our personal product",Last moment improvisation is little bit challenging   Management interference in development I really hate to this kind of approach,3,24,1,1,,70,4,3,,4,ANONYMIZED,ANONYMIZED,,Asia,
2,35,4,1,2,2,"Smart, social, creative, interested in discovering new things.",Solving algorithm tasks,Knowledge in programming languages,Ability for learning new,1,0,1,0,1,0,0,0,,"Hardworking, of course)  Creativity and being fond of programming",ActuallyI dont know,2,,When you create something that works :),2,1,,My friends. I always get something from their style or methods of programming.,I havent any really chalenging task yet.,3,19,1,1,,50,1,1,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,36,6,6,5,5,"Depth and breadth of the knowledge.  Ability to apply that knowledge to solve real world scenarios.  Ability to compare and contrast several approaches and ability to successfully convey the comparison data to others.  Ability to dream (here by dream I mean ability to imagine future of some feature in a more user friendly and useful way, without restricting him self to current limitations  of technology)",Quality engineering,Performance analysis,Dream (please see above answers last point),0,0,1,1,0,1,0,0,,Attention to detail.  High standards of quality.  Taking responsibility.   Ability to work with a team,Should provide employees with opportunities to exchange their knowledge  should offer employees chances to change the projects they are working on.  Should provide opportunities to meet the users of the projects they work on  ,2,,Satisfaction of knowing that I am working on something that can make others lives easier.  ,2,1,,"There are several mentors I follow regarding several aspects.  One mentor focuses on quality of the work you do. he taught me quality assuarance techniques and how to help others to improve quality of their work.  Another mentor helps me on how to work with customers. How to understand their problems, how to propose a better solution.",Keeping up with the new trends of the discipline while contributing to the growth of my work place.,4,26,1,1,,85,15,2,,4,ANONYMIZED,ANONYMIZED,,Asia,
2,37,18,10,6,5,Ability to design and implement systems that will (a) fulfill the actual business need even if not stated explicitly (b) in a manner that's maintainable and scaleable - doesn't cause problems later on.,System analysis and design,Debugging and understanding other people's code and systems of varying quality,Discipline to keep implementing best practices even when they become boring,0,0,1,0,0,1,0,0,,"General problem solving, eagerness to understand why and how things behave the way they do..",Ensure that there is some rotation of people between various projects and parts of the codebase.,2,,Creating systems that are able to do something that wasn't possible before they were created.,2,2,,,"Keeping up with rapidly changing toolchains, as previous best practices become anti-patterns.",4,32,1,3,,50,5,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,38,1,1,4,3,,Analysing problems,chose the write technology or solution,Writing a clean code,1,1,0,1,1,1,1,0,,"logical thinking and considering multiple scenarios. Have the ability and the will to solve problem using the acquired knowledge, contacting the programming language community or making references to other problems.",break times to develop their own projects or have courses to go out of  the death line stress . at work chalenge them and try to understand their work.,2,,Solve problems and see how projects get developed from scratch,1,1,,He was always supportive and described the path to follow for each task. ,change technologies or try to understand done work by unknown developers,2,23,1,9,,30,5,2,,3,,ANONYMIZED,,Europe,
2,39,5,2,4,3,Knows how things work and all consequences of a certain design choice or code line.,Problem Analysis,Searching Information,Code Dilligence (writing quality code),0,1,1,0,1,0,0,0,,being systematic,provide literature  enable to work a little part of work time on project of choice  enable participation in (meaningful) conferences where valuable expertise and experience is exchanged,2,,Seeing results of my work (how the product I worked on helps improve lives of people).,2,2,,,Being realistic - budget (and therefore time) and doing things the proper way are in opposition. Finding a way out of this.,2,31,1,1,,80,3,2,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,40,35,20,6,6,"Ability to successfully decompose problems into separate modules with effective separation of concerns and clear, simple specifications.",Modular decomposition,Specifications,Algorithm and data structure selection,1,0,1,1,1,1,1,0,,Attention to detail  Ability to model others' knowledge and understanding  Clarity of thought,"Code reviews and feedback from other developers  Coursework: software engineering, programming languages, domain-specific content",2,,Having others able to build on my code.,2,1,,Someone who worked closely with me and critiqued my work.,Evolution and reuse of large software systems requiring refactoring.  Security.,5,49,1,3,,40,8,4,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,41,7,4,4,4,,Not over-engineer,Get it done without straying to other topics too much,"Mainting Security, Usability & Performance",1,1,1,0,1,0,0,0,,Intuitively knowing what technologies to use and how to implement certain parts of a large project.  Also also having the big picture in the head.,Assign clear tasks that don't last too long or too short.,1,Github statistics,Developing small tools that I or friends want or like.  Seeing my code out there in the wild.,2,2,,,Focusing on that one task,4,22,1,1,,70,5,2,,4,ANONYMIZED,ANONYMIZED,"Viel Erfolg mit deiner Forschung, Sebastian :D",Europe,
2,42,12,12,6,6,Architect ,Planning,Designing,Implementing,1,1,1,1,1,1,0,0,,Pay attention to details,"Encouragement, Motivation, Training",1,JIRA,Hobby,1,1,Changes in attitude. Performance down when personal priorities take over work priorities ,No really. ,Meet the deadline under pressure. ,5,35,1,3,,100,4,3,,4,ANONYMIZED,ANONYMIZED,,Asia,Pakistan
2,43,30,5,5,4,"Familiarity with principles and techniques of general applicability such as basic data and control structures, design patterns, and computational complexity, coupled with knowledge of their implementations in one or more specific programming languages.  At least a basic understanding of the underlying hardware and operating system (von Neumann architecture, etc.). An understanding of the purpose of programming tools such as compilers, preprocessors, debuggers, profilers, editors, and integrated development environments, plus knowledge of how to efficiently use the ones relevant for one's work.  The ability to find, read, and write documentation.  At least basic knowledge of copyright and (free) software licensing.",Algorithm design,Data structure design,Documentation,1,1,1,1,1,1,1,1,Private time I spend using and reading about Java,"A good balance of attention to detail and the ability to see big-picture issues.  A willingness to share code and help others.  Good communication skills, at least in writing.",Don't work them too hard.  Allow them time for directed and undirected self-education.,2,,Simply writing code that successfully solves my own problems.,2,2,,,Taking the time to write documentation (other than source code comments) and keeping such documentation in synch with continuously developed software.,4,37,1,1,,20,40,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,44,30,15,6,6,In depth knowledge of the software he is working with. The ability to fix all problems regarding this software and all software it depends on.,Creating abstract solutions from concrete problems,Finish tasks until they are really finished,Communication with his team,1,1,1,1,0,1,0,0,,"Endurance, because simplest things can take huge amounts of time.",Allow them to share their knowledge with others. Support them participating conferences. Let them work at more than one project. ,2,,Creating working things,3,2,,,Work life balance,4,43,1,1,,90,6,3,,4,,ANONYMIZED,,Europe,
2,45,4,1,4,3,analytical and designing skills characterizes a SDexpert.,analysis,design,implementation,1,1,1,1,0,0,0,0,,the person who accept their flaws and mistakes easily and also think critically and respond after analysis of the situation.,assign them task to review any random person's work in the same company.,2,,hands get dirty sometimes but it is not literally.,1,1,decline because did not get much projects due to change in priorities,no,the pace of understanding of the fellow developers is not consistent,3,22,1,1,,30,4,1,,4,ANONYMIZED,ANONYMIZED,,Asia,
2,46,2,2,4,3,"Having the skills to analyse, evaluate and take decisions able to forecast in time the costs in terms of time efficiency and earnings,  ",Understand the Business of Customer and Software Infrastructure, Project Management Skills,Software Security && Testing,1,1,1,1,1,0,0,0,,One of the most important things is the so called having the  Emotional Intelligence . ,"Motivate, allow flexibility toward other tasks, training ",2,,Having the fully functional product at the end according to requirement specifications by any customer.,1,2,"changes in attitude > personal life reasons (less of motivation, personal issues, lack of concentration)  work environment > the younger the age the more productive it is. Open minded people are welcomed.",,Always is a challenge. Researching before deciding on tools is the most challenging for me. Attached to this i would add the necessity to adapt algorithms with the  tools  offered.,2,24,1,9,,50,2,2,,4,,ANONYMIZED,,Europe,
2,47,20,15,5,5,"Deep knowledge of fundamentals, current with new technologies",Identify best technology for the project,Write clean efficient code,breadth of experaince with related tools and technologies,1,1,1,1,0,1,1,1,"knowledge of new java features, passion and enthusiasm for the technology",Real interest in best practices and the evolving nature of software development. Desire for professional self improvement,"Allocate time for education, training and further skill development. Accept that development is change and be willing to accept change.",2,,Creating a cool solution to a problem. Making a discovery. Watching the development of rapidly changing technology.,1,2,"The decline was due to the realization that extra effort was not rewarded, or do a loss of faith in the project/organization/management",,"Keeping abreast of new technology, while working with systems that are increasingly older.",4,46,1,1,,20,1,3,,3,,ANONYMIZED,,North America,UnitedStates
2,48,4,2,3,4,"Good quality code, make and understand design decisions like when to use pattern X or why use getters and setters and why not, got indepth knowledge on what the langauge can do etc.",Code,Do it right the first time,Quality code,1,1,1,1,0,0,1,0,,"Analytic thinking, know math, team work, understand your weaknesses and strengths",Challange them,2,,Money,2,1,,At university of amsterdam several teachers learned me look at programming differently,Politics,4,24,1,1,,70,5,3,,2,,ANONYMIZED,Intresting research! Goodluck Keep me up to date :),Europe,
2,49,25,1,6,4,,Managing Complexity,Divide and Conquer,Communication Skills,1,1,1,0,0,0,0,0,,Attention to detail. Self Critical. Determination.,Time allowed for self improvement. Motivation for quality.,1,,Happy end users.,2,1,,,Managing the managers.,3,41,1,1,,70,1,1,,2,,ANONYMIZED,,Europe,
2,50,8,6,5,4,Someone that with accuracy can estimate the costs of developing a piece of software and also possess the skill set required to get it done.,Sustainable Design,Efficient Implementation,Concrete Documentation,0,0,1,1,1,1,1,0,,"Helpfulness towards others, ability to adapt to changing circumstances, ability to find the concrete issue in a larger scope. ","Let them go open source. In that way, every piece of software they write will be analyzed and criticized by others, which will teach them their own mistakes.",2,,Solving problems that others are struggling with. Being able to save people time and money by automating tedious tasks. ,1,1,If you work with the same team for a long period of time you tend to learn not only their strengths but also assimilate their weaknesses. That can result in a decline in productivity since no one can pin point what the team as a whole is doing wrong. Attitude can also worsen when the goal is no longer to save the world but to maintain a product that was originally developed by someone else.,My mentor is y current boss. He has a long experience with java programming and especially with performance critical applications. His way of always reasoning around problems in an academic way is a huge inspiration for my own problem solving skills.,Having to perform a broad variety of unrelated tasks. That results in less focus on the problems at hand which generally results in worse quality. To see in a early stage which tasks will take away your focus and either delegate or cancel those tasks is a difficult but necessary challenge.,3,,,1,,80,10,2,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,51,40,20,6,6,Understands that each choice is about many forces and that the expertise is in knowing (or intuiting) what is crucial and what is a mere detail.,Understanding the problem domain quickly,Decomposing a problem into cohesive solution descriptions/responsibilities,Keep the eye on the ball and do not get distracted with technology for technology's sake,1,1,1,1,1,1,1,1,work in Java expert and specificiation groups.,Being able to think abstract without losing sight of the specific. Being able to throw away code. Happy you're done so you can do it again but then right.,Hire curious people,2,,Flow,1,2,Lost interest,,Lack of humbleness in programmers of what they actually know.,5,57,1,3,,90,40,1,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,52,4,3,5,5,,,,,0,0,1,1,0,0,0,0,,,,2,,,1,2,,,,3,28,1,1,,80,10,2,,3,,ANONYMIZED,,South America,
2,53,10,7,6,5,- Understanding the language & platform  - Writing bug-free code  - Writing maintainable & well-tested code,Writing bug-free features,Unit testing,Refactoring,1,1,1,1,1,1,1,0,,- Humility  - Hard work,- Demonstrate that improved skill is valuable to the company (via compensation & other means)  - Hire & encourage,2,,- Solving problems,2,1,,"He was explicitly my mentor: I was hired as an apprentice. He had tons of experience & knowledge to share directly, but also encouraged me to find my own way. I often found myself trying to ask him a question, and instead of him giving me answers, he'd ask me more questions. And in the process I learned a ton.",- Balancing tradeoffs,4,35,1,1,,10,5,1,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,54,14,12,6,6,Knowledge of multiple languages.  Knowledge of multiple technological solutions.  A lot of field experience.  Keep updated with evolution of the main platform under use.,Collect requirements even from non expert speaker.,Define a flexible architecture which allow high margins of adjustment.,"Develop the solution in an incremental way, collecting constant feedback from the users.",0,1,1,1,1,1,1,0,,"Curiosity, interest in stay updated, steadiness.",Spend a constant quantity of week time reading about and trying new technology advancements in their fields.,1,"With maven tools, custom web tools for monitoring.",To have a large number of users for your code.,2,1,,A friend and colleague who introduced me in a large open source community project.,"Find the right compromise between quality, robustness and flexibility of the solutions you're developing.",5,36,1,3,,80,8,3,,4,,ANONYMIZED,,Europe,
2,55,5,3,3,4,,Testing,Requirement Analysis,Communication,1,0,0,1,0,1,0,0,,"Careful, open-minded, patience","Set a nice work environment, good feedback between the members of a company.",2,,"Seeing some product that you visualized, working in real life. Solving problems that were slowing the developing process.",2,1,,"Intelligent, a little bit out dated, enthusiasthic.",Visualizing a project that you want to develop. The interaction with possible clients. The blockade that sometimes the code errors mean.,3,23,1,1,,100,6,2,,4,ANONYMIZED,ANONYMIZED,,South America,
2,56,8,4,5,4,Hard Work,Research,Development,Testing,1,1,1,0,1,0,0,0,,"Hard Work, Tolerance, Love Towards God",Teach them how to work sincerely .,2,,Making things possible,2,0,,,Health is wealth,5,22,1,1,,50,20,2,,4,ANONYMIZED,ANONYMIZED,nil,Asia,
2,57,12,8,5,5,"Someone who is interested and excited to solve problems utilizing software.    Generally, they have exceptional attention to detail, a methodological approach, and great problem solving skills.",Time management,Problem Solving,Estimating,1,1,1,1,0,1,0,0,,"Attention to detail, anxiety, desire to master skills",Set aside a specific training budget with drop dead dates to utilize it (so that they are encouraged to spend it),1,"Github/Bitbucket activity, metrics on meetings, and periodic reviews of a corporate nature.",Problem solving.,2,1,,Professor that encouraged problem solving with expert attention to detail.,"Maintaining passion for the job, despite outside pressures.",5,29,1,3,,50,8,3,,4,,ANONYMIZED,,North America,UnitedStates
2,58,6,1,4,2,"Extensive knowledge of data structures, algorithms, and advanced algorithm design techniques. Additionally, the ability to learn and adapt to new languages as necessary to their broad background in programming.",Learning,Algorithm Design,Debugging,1,1,1,0,1,1,0,0,,"The ability to think analytically, solve logic problems, research and reading technical documents, patience, good memory, drive to continuously learn.",Monthly sessions updating the employees on new features with the APIs that they are using (or sessions to get them up to speed with deep knowledge in that language). Sessions that will expose them to new languages and demonstrate what those languages have to offer. ,2,,Instant gratification of seeing your program working or failing. Reducing code and making it neater when refactoring.,2,2,,,Continuous overload of new programming languages and APIs being made available that I cannot keep up with.  ,4,20,1,1,,30,1,1,,2,ANONYMIZED,ANONYMIZED,,North America,
2,59,9,6,5,4,"Software development expert is a person who identified a computing problem, proposes multiple solutions, picks the most appropriate and transforms into code in a language that suits the environment of problem domain.",Problem solving,Writing code,Make use of existing code (including frameworks),1,1,1,1,1,1,0,1,My work with global open-source Java software,"Being innovative, inquisitive, thirst to learn and share, reading code written by other developers and finally, ALWAYS being open to adopting new technologies",Standardizing code conventions to aid code reviews (which is the main objective); rotating projects between developers; tight QA and testing; contribute in global open-source projects.,3,,Being able to share the unique knowledge I've gained and feel being a useful contributor of society.,1,2,"I have found out that Stress is a massive contributor in this regard. Stress is caused by working on more than two projects at a time, seniors being unhelpful and tight deadlines.",,"The most challenging part is figuring out right Abstraction. Too much generalization stretches work, too much specialization limits capacity to cope up with future changes (especially in incremental development).",3,31,1,3,,60,3,3,,4,ANONYMIZED,ANONYMIZED,Good survey. You may want to talk about open-source software.,Asia,Pakistan
2,60,4,4,4,4,"An ability to create new things, a different way of thinking, excellent problem solving skills",Problem solving skills,Creativity,Innovation,1,0,1,1,0,1,0,0,,,,1,,,1,1,,,,3,23,1,8,,80,4,3,,4,,ANONYMIZED,,Europe,
2,61,6,5,3,4,"Intimate knowledge of the language used is assumed for any expert. Barring programming expertise, the most important thing is the ability to design. Without a solid direction, numerous rewrites are often required as the ideas driving development are refined. That's a waste of time - you should formulate a plan and implement it, not hack away and then force your product to work in the fashion preferred after the fact. To know how to design the software, an expert needs to know its requirements. Assuming it is not a personal project, communication skills are critical, be it understanding a customer's desires or helping others use your product.",Design and planning,Communication and collaboration,Documentation,0,0,1,1,0,1,1,0,,"Eagerness to learn. Programming languages are constantly changing and evolving. If you aren't changing and learning with them, you become obsolete.",Encourage (but not mandate!) employees to take courses or explore new features in their languages of choice to keep their skills sharp. Facilitating courses or encouraging breaks to work on pet projects are good ways to make the process enjoyable.,1,Version control systems.,"Knowing that many people have used and enjoyed some of my pet projects. It's very satisfying creating something that you want, then having a couple thousand people confirm that your time was well-spent.",1,2,"The decline I saw came from the person realizing that they were not passionate about programming and preferred the hardware side of things. As their interest slipped, so did the quality of their code.",,"Keeping up with the language. There's always something new being released, whether it's an update to the language itself or another powerful third party API.",3,22,1,1,,20,2,1,,2,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,62,10,6,4,4,"Deep knowledge of what happens behind the programming languages the developer claims to be an expert in, i.e. not only what a piece of code does, but HOW.",design,execution,documentation,1,1,0,1,1,1,0,0,,Patience and analytical thinking.,Using up to date technology stacks whenever and wherever possible.,2,,Solving user needs.,2,2,,,Lack of proper documentation and examples in projects.,4,28,1,8,,25,10,4,,2,ANONYMIZED,ANONYMIZED,"For the open input section, it may be helpful to add examples?    Good luck!",Europe,
2,63,10,8,4,5,"Understanding how the frameworks work under the hood (not just how to use the framework).  Understand complex systems and system interactions, potentially involving multiple languages, stacks, and networking.",Modularizing the solution (Design),Testing,Development,1,1,1,1,0,0,0,0,,"When fixing a bug/problem, investigate in the root cause deeply, to really understand, what went on. This helps to improve the own model of  how things work  and helps to predict problems in the future. Analytical approach.","Be open to experimentation (like new frameworks, tools, languages) = freedom to experiment. Foster a user group/session/regular meetings to support knowledge transfer,  Show and tell  within the company where developers from the different software projects can join and share knowledge.",2,,"Solving problems, seeing a working product in the end. For open-source contributions, helping other users.",2,2,,,"Discipline - really keep the quality high. This means, saying  no  for last minute changes. Resist the temptation of  quick fixes  - even under time constraints.",4,31,1,1,,100,4,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,64,33,16,5,5,Understands that there are many ways to solve a problem and having the depth of experience to be able to choose the right one.,Analytical Thinking,Imagining how it can go wrong,Decompose & Recompose,0,0,1,1,1,0,1,0,,Analytical Thinking,Suscribe to Pluralsight and O'Reilley online for their employees. Facilitate Meetups. Identify important technologies and train their staff on them.,2,,The moment when your idea starts to work.,2,1,,"Bearded older chap, a bit excentric but full of good ideas.",Managers with arbitrary deadlines and endless meetings.,5,47,1,1,,15,2,1,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,65,28,20,5,6,"Given her current role and available information, to /know/ exactly the most valuable step that she must take next in order to drive the software development project forward and generally also how (both in the sense of what to do and how to do it) to execute that step as far as it falls in her field of competence.   ",Analysis & Design,Implementation of chosen technical solution,Communication and taking care of process issues,1,1,1,1,1,1,1,0,,"- continuous learning with a focus on practical experience and understanding key concepts  - first specialize on one language/system, then slowly go broader, then specialize again a bit more to become an expert  - reading relevant academic papers (after a certain level of experience at least)  - talking with other developers  - study real world systems and read their source code   - understand required theory  - change jobs at least early on once in a while or at least work on different projects in the same company","Facilitate experimentation:  - time boxed spikes/prototypes  - slack time for personal projects    Facilitate learning:  - reading clubs for books and papers on company time  - encourage conference visits (and pay for the costs)  - encourage taking trainings  (and pay for the costs)    Organizational:  - Try to support your engineers in managing work life balance properly, overworked engineers lack creativity, and lack of ideas impacts learning negatively  - Culture of reflection: Have a process that actively tries to learn from past experiences (i.e. organizational feedback cycles, like retros)  - Try to hire at least some very senior and experienced developers that are a good fit and willing (!) to mentor younger engineers",1,"- Checking commit and line count vs my peers, not overly obsessed with that but keeping an eye out, also a great way to see which of the younger engineers have a lot of energy. That said, line count does not at all translate into productivity at all, it needs to be interpreted knowing what the person has been working on and what their skill set and experience is  - I try to take note of how often I win technical arguments with my peers as a soft indicator of how up to date (or rather how overworked) I am  ","- Shipping software that gets used by real people to solve real problems  - Solving interesting abstract problems and mapping them on a concrete technical solution, i.e. I really like the design side of things as well as coming up  with good implementation idea of it",1,1,"- Communication problems caused by organizational growth putting me in a place where I felt I couldn't influence decisions anymore at the same scale as earlier  - Becoming a father, getting somewhat older making it more difficult to keep up with junior hires","Self taught dude with a lot of practical experience, especially regarding process that showed me the wheels when I was entering the field after dropping out of a PhD program. Helped me tremendously getting better at (a) focus (b) executing ideas properly in a production level quality.",- Keeping up to date on technology,5,,1,7,,80,5,3,,4,,ANONYMIZED,"Thanks for the great survey, nice opportunity to reflect",Europe,
2,66,11,5,5,4,Know about the tradeoffs of the current language/framework etc and use the RIGHT one,Communication (in general and ideas / architecture / feedback),Architecture of large systems,Coding,1,1,1,1,0,0,1,0,,"Be a good communicator, be able to explain your ideas and know about the pros/cons.  ",Encourage a working model where 1 day per week is spent on personal development (social skills as well as programming related),1,"In Java projects, findbugs, otherwise language specific tools and also code coverage and metrics if available.  Otherwise, contributing to high quality open source projects and being reviewed is good as well",Building things.,1,2,,,Pressure from the management side to implement new feature X in Y days without caring about code quality,4,27,1,1,,80,7,3,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,67,6,1,4,2,"technical knowledge, the ability to take into account security, quality, ci, testing and maintainability in the proposed software solutions, result orientation and some people skills to organize work with the team",software design,testing,comunication with take holders,0,0,0,1,0,0,1,0,,"proactivity, continuous trainning, being motivated by challenges",assign complex challenges to their employees.,1,"jira issue tracker, pomodoro timer","software development is not a routinary activity, there is always a new problem to solve and a better way of doing it",1,1,"mainly because of motivation. Lack of motivation due to not understanding the bussines objectives of my job, not being able to work well with some team members","He was a professor in university. Really passionate about education. He show me the good parts of this kind of activity, the fun in software development. ","organizing with others software developers not located in the same geo, or with persons involved in the software development process that are not devs (UX designers, managers, marketing guys, etc)",3,24,1,1,,70,20,3,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,68,35,18,6,6,Having a process of development that is sustainable and transferable to other members.,Architecture,Testing and bug tracking,Release management,1,1,1,1,1,1,0,0,,You have to care about the software beyond what you are paid for.  Self-motivated.  Both detail oriented and able to see the  big-picture .,"They have to care about the work more than they care about having a safe, comfortable job.  They must pay attention to who is doing a good job and who is not and give feedback, and if needed, consequences.  They need to encourage continuing education and exploration of new practices.",1,"Metrics on github, coverity defects, issues resolved.",Making something work that is useful to others.,1,2,A lack of consequences for good / bad work leads to programmers not trying.  Age related declines.,,"Managing the stress of caring, and staying motivated.",5,62,1,1,,100,5,3,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,69,25,20,6,6,he never stops learning and asking,Design Pattern,Refactoring,Testing - TDD,1,1,1,1,0,0,0,0,,"the willingness to learn, ","hire the best, let them do what they can... coding.. donÂ´t try to make managers out of them, never give them the responsibility over other developers. Give them time to learn . 80/20 rules",1,"speaking at conferences, writing articels, working with the community, getting feedback from the best","I can work from everywhere, at any time I want..  no office , not fixed time..  I can play with my son and work later",1,1,,,to find a good place to work..  not being part of a typical consulting company,4,40,1,10,Fellow,90,30,1,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,70,15,10,6,6,,,,,1,0,1,1,1,1,0,0,,,,2,,,2,2,,,,5,33,1,8,,50,5,4,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,71,16,14,6,6,"deep understanding of hardware, O/S and languages.  good communication skills  excellent capacity to make tradeoff and capacipty to be pragmatic and focus on delivering values in the short and long term",debugging,communication,managing complexity,1,0,1,0,0,1,0,0,,"pragmatism, avid learner",encourage open source involvment,1,"sonar, sloccount, github activity logs","building working products, having new challenge and exploring new fields all the time",2,1,,Apache Softwar Foundation committer who helped me to dive into open source communities,communication and complexity,5,36,1,10,Principal Engineer,80,4,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,72,5,1,5,2,someone who has been exposed to many software scenarios. Knows more than half of the standard library api by name.,abstraction,testing,communication,1,1,1,0,1,1,0,0,,aptitude. economic independence. exposure to the right ideas and people.,offer to pay for technical books.,1,test coverage,the compensation.,2,1,,,"focus, hours",3,26,1,1,,90,6,2,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,73,30,15,6,6,,design,algorithmic,analysis,1,1,1,1,1,1,1,0,,logic,tutorial with development experts,3,,the use of my open source softwares,2,2,,,distributed programming.,5,41,1,8,,60,10,5,Accreddition to Supervise Research (French National Doctorat),2,ANONYMIZED,ANONYMIZED,,Europe,
2,74,6,5,5,5,"A developer must be a person updated in new technologies first of all has to be an open person to learn new technologies.  In my opinion be an expert in one single language or technology not as important as having knowledge that let you confident to use it in various technologies.  It should also have a certain market experience.  Should know of good programming practice, not just theory, but in practice !!",Good practices in programming,updated in new technologies,Open to learn new technologies,0,1,1,1,0,0,0,1,"What i know about JVM, java is nothing without JVM","Does the correct mapping of issues and action points in development. Sees future risks in projects or teams and assists in the planning and execution of actions to prevent or reduce the effect of these risks.Negotiate time and resources in projects to implement the suggested actions. Plans to conduct their negotiations, create alternative scenarios, presents and discusses impacts of the various options, facilitating the achievement of win-win solutions.Adapts to different projects, areas and technologies. Knows about the right time to finalize its activities in a given project so that the team may continue the action autonomously. It is able to propose changes and evaluate together with the team the possibilities to implement certain action.","Accept new ideas from developers, let developers participate on open source projects when they are at work",1,"We dont use metrics, but in personal i use some code coverage tools to check if its  ok  the project's test coverage, code review, and pair programming","Every day there is a posible to participate in a new problem/solution from different clients, techonology is the way to growup!",2,1,,My mentor just help me to think what is the next step i have to give to grow up in my carreer,"Our clients usually dont accpet new techonlogies, they are years behind on what is the new today",5,24,1,1,,80,6,2,,4,ANONYMIZED,ANONYMIZED,,South America,
2,75,40,12,5,5,"Someone who can encounter some new technology, language, or environment, evaluate it and find the best way to use it.  Someone who can look at a million lines of code and within a week or two find and fix a bug.",Be able to quickly evaluate new technologies for suitabity,Be able to understand large amounts of code to zoom into where a problem is occurring,Be able to communicate their ideas and mentor others,1,1,0,1,1,0,0,0,,Confidence and patience.,Allow them to work on large open source projects 20% time.,2,,Helping others involved in the same project.,2,1,,I have had many mentors.  In each case their primary role was to get me through mental blocks when I am working in a new environment.,Teaching people with weak education / preparation how to parse and understand million line programs.,4,57,1,3,,50,40,4,,4,ANONYMIZED,ANONYMIZED,Github truly makes working with mentors and mentees much easier.,North America,UnitedStates
2,76,6,4,2,2,,,,,1,1,1,0,1,1,0,0,,,,2,,,2,1,,,,2,22,1,1,,65,15,3,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,77,10,3,5,3,"An expert software developer must be able to use many different paradigms of programming and accurately determine which type of programming will solve a problem efficiently. They are able to quickly create solutions and understand advanced data structures. Software developers may be experts in several areas, and it is not easy to be an expert at all areas of software development. They must be able to understand the limits pitfalls of the languages they work in, and understand how to create software that has a low probability of incorrectness (bugs).",Dissecting complex problems into their components,Understanding how to arrange data and structure a solution to match the data inputs of the problem,Communicate clearly the intent of code through source control commit messages and code comments,1,1,1,0,1,0,0,0,,Foundation of logic and experience with mathematics are helpful. The ability to teach oneself and work towards new goals is important. Desire and passion to continue improving.,"Employers should ensure that an employee has ample opportunities to try something new, and encourage all developers. Team leads should be aware of what areas a person can use more practice and time with, and encourage them to grow in these areas. Don't just say  I'll do it myself  because you think someone else can't do a project as good as you. It is important to create opportunities to new developers to give them the chance to grow.",2,,"Being a software developer allows me to think about problems and solutions in a unique way. It helps give me a deeper understanding of all the hidden complexities found in modern life. It helps see problems in a new way, because I am always thinking about the ways software can improve things.",2,1,,"A co-worker who was incredibly exceptional at finding the best solution to bugs. They were incredibly efficient at pointing out areas of improvement, and helping understand why certain solutions weren't as good. They helped drill practices that encourage better software solutions, such as unit testing, and creating good commit messages for my work.","Communication. Education for software developers usually focuses purely on the programming aspects, with maybe one or two classes about technical writing or software development practices. But the most challenging problem is accurately communicating ideas and working within a team to efficiently solve problems. Bad communication can destroy team projects and cause issues over time. Bad communication via commit messages in code can result in inability to fix bugs in older code because you can't understand what the original change was intending to do.",4,26,1,1,,100,5,2,,4,,ANONYMIZED,,North America,UnitedStates
2,78,28,19,5,3,"He must be able:  - to collect requirements from stakeholders exploring with them pros, cons and inconsistencies of the various scenario  - synthesize a model that fulfills all the requirements and, if time is limited, evaluate alternative models that fulfills the most valuable requirements  - choose the best technology to implement the model (not just the one he's best acquainted with)  - design test suites  - write code  - read someone else's code  ",model designing,code writing,requirements elicitation,1,0,1,0,0,0,0,0,,"Humility: listen, think then talk  ",Give them time to experiment (although not all employees would spend that time to experiment),2,,Write beautiful code that works reliably in the real world,2,2,,,Try to convince the employer that the time spent analyzing requirements and designing the software is not wasted time (most truly believe that you are actually doing your job when writing source code),4,41,1,3,,100,1,3,,2,ANONYMIZED,ANONYMIZED,"The most demoralizing aspect of software development is when your employer doesn't realize that a well designed and tested software costs less, in the long run, than a software written in a rush. But there are exceptions. Some software won't lasts a few weeks, thus too much thinking about its design may actually be a waste of time and money.",Europe,
2,79,16,16,5,5,the hability to resolve the problem in your head before start coding,understand the problem,know great tools,work in teams,0,0,0,1,0,0,1,0,,learn the concepts not the tool itself,,1,issue tracker,the knowledge you gain day by day,2,1,,he believes that everyone is able to solve problems and gives them opportunity with no distinction of any kind.,been able to follow the continuous changes in software development,4,27,1,1,,60,3,2,,4,ANONYMIZED,ANONYMIZED,,South America,
2,80,13,8,5,5,"Solid concepts about program paradigms (not syntax or other trivial things), problem solving skils, a bit of math skills.","Design (planning, using software engineering artifacts or not, before code)",Re-design (design oriented refactoring),Problem solving - I'm not shure about the order :),1,1,1,1,0,1,1,0,,"curiosity, bravery to do big refactoring in code and design, persistence and resilience, because things do not work correctly all the time.",working with innovative things instead of trying to profit as much as possible with the same things.,2,,the possibility of materializing ideas. Programming is an incredible tool for testing hypotheses.,2,1,,"Honest, able to share what he knew without restrictions.","stress, loneliness",5,37,1,1,,35,3,3,,4,ANONYMIZED,ANONYMIZED,good luck in your research :),South America,
2,81,20,16,5,5,"An expert needs a deep knowledge of some domain, but also the ability to solve problems in general ways. An expert doesn't need to know everything, but should have a good grasp of what they _don't_ know so that problems can still be solved by appropriate research.",General algorithms for solving common problems,Debugging problems,Communication,1,1,1,1,0,0,0,0,,"Attention to detail, the ability to concentrate and not be distracted, communication.",,2,,Solving problems for users.,2,1,,,Managing user expectations.,4,42,1,1,,60,3,2,,4,ANONYMIZED,ANONYMIZED,,Oceania,
2,82,6,6,5,6,Near complete knowledge of language and platform being developed with.,Team Management,Problem Solving,Software Design,1,0,1,1,0,1,0,0,,Good learner.,Mentoring by senior members.,2,,Freedom to create software which solves a problem.,3,2,,,Inter-team relationships.,5,,1,3,,50,10,1,,4,,ANONYMIZED,,Oceania,
2,83,8,1,4,4,Logical thinking which identifies what is important or not,Making easy-to-understand code with good documentation  ,Identitying issues when something wrong happens,Understanding softwares and libraries you use,0,0,1,1,0,0,0,0,,Understanding what actually happens.,Teach programming design patterns.,2,,Coding itself is fun.  Thinking about good software design is fun.  ,2,1,,,Co-working with different programming policies.,3,25,1,1,,90,4,3,,4,ANONYMIZED,ANONYMIZED,Interesting!,Asia,
2,84,10,9,6,5,"An expert is someone who knows that almost all bugs are preventable, and spends most of their time planning and designing their software.",Class design,Unit testing,Code factoring,0,0,0,1,1,1,1,1,"I am the author of a JVM-based programming language. That said, I have never had occasion to use some of the most common enterprise dependencies, such as Spring. Thus one less than expert.","Patience, one. A fascination with tinkering. An obsessive interest in learning from mistakes.","1. Code reviews, when done properly, are a great tool for mutual growth and learning. They probably should be done among peers and in a spirit of conviviality. If a supervisor must do the code review, the subordinate should also do a code review for the superior.     2. Encouraging side projects that require new skills is a good way to keep employees growing. One way to leverage that benefit is by requiring that people present these side projects as a condition of doing them. Note that I don't mean 20% toward R&D like Google. I mean at least 10% toward developing new technical skills of your choosing.    2. If someone uses mutual growth activities like code reviews as a way to punish competitors or otherwise get ahead, or is uninterested in attending peers' side-project talks, they are not the kind of people that drive effective, motivated teams.",1,"I like to look at previous work that I did to see how it improves in a qualitative way. Often times, when I revisit old code (which is often), I take some time to study it, ask what could have been better about it, and if I can make it a little better easily.","I find it interesting. That said, it is a means to an end for me. The real punchline is in the analysis that I do with the software.",2,1,,"I came to my first job pretty green. The first Java code I ever wrote was for the challenge problem for that job. (They said it showed.) My boss was very supportive and would look over code with me whenever I asked for it. That was very helpful. I had another coworker who was very thoughtful and seasoned, and I'd go over and pick his brain almost on reflex. Combined with the increasing quality of online forums like StackExchange, I had a lot of smart people to learn from. :)","You have to constantly adapt to the times or you end up on the old guard. Yes, your old techniques work just fine--for yesterday's problems. But as computers get more powerful, programs can get higher level while still running fast enough. So you have to keep learning these new tools and languages. Fortunately, the new tools are pretty cool.",4,32,1,10,Data scientist,70,3,4,,4,ANONYMIZED,ANONYMIZED,"You said that a person who is  proficient  constantly seeks to improve herself, while a person who is an  expert  works from intuition. A person who works from intuition and stops trying to improve is complacent and arrogant. Those character flaws are, in my opinion, orthogonal to expertise.",North America,UnitedStates
2,85,6,3,3,3,"Flexible, abstract thinker, problem solver, capable of translating a user requirement to a technical solution",requirements ,Architecture,Refactoring,1,0,1,1,0,0,1,0,,Not being able to 'let go' until something works,Provide the time and resources for personal experiments that are not directly relevant for the employer's business,1,"Findbugs, git logs, autogenerated docs, testing/code coverage reports",Solving complex problems in a simple way,1,1,"I just couldn't focus, like a writer's block I guess",My former colleague,Translating user requirements to technical requirements and finding out what users actually need,4,22,1,10,Full stack,75,2,1,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,86,3,0,4,1,"Smart,  careful, patient and keep learning",Solve problems,Debugging,Trans problems to mathematical model,1,1,1,1,0,1,0,0,,"Careful, Curiosity, always learning and thinking.",Keep learning,2,,I can always keep my mind active.,1,1,changes in attitude,"A kind people. He direct me in many aspects, such as algorithms and coding style, with patience.",,2,22,2,9,,30,1,5,expect to get Bachelor degree in 2017.,4,ANONYMIZED,ANONYMIZED,"In my opinion, if some problems ask experience related to programming languages rather than limited to Java, the survey will be better.  Such as: Please rate your own programming expertise in your most experienced language according to the five stages described below:  Or: Please rate your own Java/C++ programming expertise according to the five stages described below:",North America,UnitedStates
2,87,40,20,6,6,"He/she must master multiple programming languages, including their libraries. He/she should be knowleable about tools for common tasks, such as parsing, databases, etc. He/she should be able to design APIs and know how to modularize and comment code.",Clean API design,Write clean code (the contents of methods/functions),Know the libraries and other tools available for the language in question,1,0,1,1,0,0,1,1,I wrote a model checker for Java and a coding standard for Java,"Persistence and carefulness. However, I admit that I see younger programmers process the skill of just trying things out in random, which I was not taught, but it seems as if it gives good results. This requires a go-and-get-it kind of attitude. It seems necessary in todays environment where code and installation procedures are not well documented. Here one's only chance is random attacks. Us older people are not used to this. We want documentation and precise attacks, and carefulness. Perhaps, however, it doesn't work in todays trend of badly documented code.","Give them the ability to achieve their long term goals. Find out what they are and open the gates for that to happen. It may be some kind of longer term  education in parallel with their jobs, for those that are not well educated.",2,,Fun!,2,2,,,Finding out what problem to solve.,5,,1,8,,50,2,4,,3,,ANONYMIZED,I think a good education in mathematics is of indirect importance. It is not directly usable perhaps but it trains a developer in clean thinking.,Europe,
2,88,13,12,5,5,,,,,0,1,1,1,0,0,0,0,,,,1,,,2,1,,,,4,,,1,,60,7,3,,4,,ANONYMIZED,,Europe,
2,89,16,14,6,6,"Clean, documented and structured code. Elegant architecture. Use of patterns. Methodologically effective. Good team player.",Design,Code,Collaborate,1,0,1,1,0,1,1,0,,Open to learn everyday. Open to ask any doubt and be ready to modify old bad habits.,"Give some free time to explore new technologies, libraries, opinions, etc.",1,,,0,2,,,Be ready for change (and it seems that software always evolve),4,32,1,8,,40,1,4,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,90,3,0,3,1,Someone that can solve problems well and create good code,Good code structure,Good problem solving,Documents well,1,0,0,0,0,0,0,0,,Looking at others code and aproch to problems,,2,,Creating programs that do something I want ,0,1,,Gave me tips on how to make my code easier to understand for others,Finding the best way to solve a problem,1,17,1,9,,100,1,1,,2,ANONYMIZED,ANONYMIZED,I am not a Java developer. I mostly work with python ,Oceania,
2,91,6,3,4,4,The ability to write code that is easily readable and performance effective in a small amount of time,Identify the problem,Write clear and fast code,Test implementation,1,0,1,0,0,1,0,0,,"Analytical thinking, simplistic approach to task",Let them have new things to do and provide them new things to learn.,2,,The result of what I have developed,1,1,the decline was periodically based on the uncertainty of the expected result.,In my early working years assigned time to discuss with me mistakes I made and habits I needed to avoid those mistakes!,Time and description of the task requested,3,30,1,1,,85,10,5,Master + i know doing my PhD,4,,ANONYMIZED,,Europe,
2,92,18,12,6,6,"Very good knowledge on software design elements, proficient in one or more programming languages, very good knowledge on technological stack (from libraries to higher level frameworks), very good knowledge on software development methodologies, good skills on problem solving",Requirements analysis,Software components design,Programming language and related frameworks proficiency,1,1,1,1,1,0,0,0,,"Good communication skills, analytical thinking","It depends on a case-by-case basis. In a general way, an employer would sustain financially - based on employer's needs and strategy - an employee who would want to develop his/her skills in a technology by getting a professional certification - by providing means to attend certain courses.",2,,Seeing that the developed software is successfully used.,1,2,"Poorer programming performance can be encountered with younger generations. Nowadays, almost everybody can call himself/herself a developer, but not everyone has the analytical thinking (or engineering approach - depends on the formation) that is required.",,The translation of end-user requirements into technical requirements.,5,38,1,3,,100,20,3,,4,,ANONYMIZED,,Europe,Romania
2,93,16,7,4,6,I have developed several medical software that is running in more than 40 health care institutions for more than 5 years.,Designing,Research,Documentation,1,1,1,1,1,0,0,0,,"Intelligence, Interest ",Train and give responsibilities,2,,People are using the software with satisfaction.,1,2,Age related decline and change in work environment.,,Designing,5,40,1,3,,50,6,1,,3,ANONYMIZED,ANONYMIZED,Wish you all the best for your PhD.,Asia,
2,94,7,5,5,4,"Someone who can use experience to inform solutions to new problems, without resorting to magical thinking. An expert understands the principles of what they are doing, and can compare the virtues of different approaches.",Asking questions,Testing,Reading code,1,1,1,0,1,0,0,0,,Fascination with puzzles; stubbornness; desire to tinker; perfectionism; pride; laziness; refusal to accept rote answers.,"Encourage code review and ongoing training, both in-house and external. Have high standards for code quality. Praise good code and good practices. Allow freedom to read and experiment.",2,,The satisfaction of solving a problem.,2,2,,,Dealing with the complexity of the real world.,3,,,1,,90,5,1,,4,,ANONYMIZED,,Europe,
2,95,6,2,4,4,how good to make abstractions,abstraction,,,0,0,1,1,1,1,0,0,,,,1,,,2,1,,,,4,32,1,9,,90,1,4,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,96,4,2,4,3,"The ability to work sufficiently without requiring external help, while being able to collaborate.",Problem Solving,Brainstorming,Adapting,0,0,1,1,0,1,0,0,,"You need to be open minded to both new ideas and concepts that you may or may not be familiar with. Without being open minded, your code will never improve or evolve and being imperfect beings, this is never a good thing.",They should push to use newer / stable technologies that can improve their projects within reason.,1,Github,Seeing people enjoy my final product.,1,2,My co-workers become lazy and had no passion in there code. It all just got real ugly real quick.,,Balancing time with quality.,4,16,1,1,,15,5,1,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,97,9,7,4,5,They need to be proactive and ,Be able to abstract the problem,Help others and coach junior developers,Always try to learn new things,1,0,1,1,0,0,0,0,,Help others,Propose courses but the presenters should be other developers from the company and when the topic is not handle by any of them bring one person from outside,2,,You get fun,1,1,"I think is a combination of different thing but the most important is the motivation that you have in your project, if you are doing some challenging or only doing some maintance ","I can say that I had three mentors because in every company I was trying to learn from my co-worker and from my experience people,specially my bosses or team leaders","It is hard to tell, but I like to think as every day as a challenge to improve in my daily basis",4,30,1,1,,80,15,2,,4,ANONYMIZED,ANONYMIZED,,South America,
2,98,3,3,4,4,Most important is desire to find the most appropriate solution to solve problems that could be appeared during the project work then accumulate and reuse them. And a person who knows how and then use that experience would be an expert.,be domain oriented ( this means to understand domain specific problems and how them solve ),clean code and best practices,Testing (TDD for instance),1,1,1,1,0,0,0,0,,Strong desire to work hard :),"Self-learning, sharing skills (Techtok, conferences etc.), participate in appropriate courses",3,,Ability to do that I like (I mean my work ),1,1,,He knows much. He is doing a lot differents things ( not only software development ) in work ,"There were lot of them. Some of them are integrate Lucene, implement small cms for static site etc. ",3,25,1,1,,40,10,3,,2,,ANONYMIZED,,Europe,Ukraine
2,99,16,12,6,6,hability to take decission that would not compromise the software evolution and scalability,testeability,scalability,documentation,1,0,1,0,0,1,1,0,,team working and adaptability to new paradigms or stacks,"focus and growth, both together are the best to get the best from people",1,"internal metrics and public tools (ohloh, bitergia, etc)",when something actually works and resists,3,1,,"a personal curioys about new things, eager to learn and discuss, but always very meticulous","get out the real requirements, othewise my work is a mess",5,34,1,3,,65,6,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,100,10,8,4,4,Structured,Logic,Structure,Documentation,1,0,0,1,1,1,1,0,,Curiosity,Versatile job,2,,End product,1,1,Work environment,Posed challenging problems,Debugging,2,26,2,8,,25,2,4,,3,,ANONYMIZED,,Asia,
2,101,8,8,3,4,Possessing the ability to quickly and accurately transform an idea or concept into code,Debugging,understanding why code acts the way it does,Adaptability ,0,0,1,1,1,1,1,0,,Being comfortable with failure,Try to not stay in one place too long from a tech standpoint ,1,Github,Fixing a problem that seemed impossible to fix,1,1,Not being able to get in the zone. Not feeling inspired. Feeling bored by everything I write. Solution: Take a break and write something more fun ,,the amount of things that I should learn how to do ,3,24,1,9,,70,2,1,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,102,10,10,5,5,"Good aptitude to realize that there are a lot of thing to learn left.Hability to change your habits in a sense of trying new approaches or new paradigmas. Never keep milking the cow, and use the sametools","Providing meanfull names to objects,method,variables",Good abstraction skill. Object programing done right.,Refactoring,0,1,1,1,0,0,0,0,,,"Provide a good Continous Integration infrastructure: Jenkins, Jira,SonarQube. Trainings in new techs. ",3,,Satisfaction to get your tasks done.,2,2,,,Coping with legacy projects.,4,35,1,1,,100,3,2,,2,ANONYMIZED,ANONYMIZED,,Europe,
2,103,13,10,4,4,"General knowledge about paradigms (OO, FP, ...), data structures, algorithms, computational complexity, and design patterns. Language-specific knowledge (knowing the API, common pitfalls) and tool-specific knowledge (version control systems, IDEs or editors, build systems, test suites, also OS knowledge). Domain specific knowledge. Experience with team collaboration. Also, a consistent and systematic workflow.",Understanding existing code,"Writing clean, correct, and understandable code",Debugging,1,1,1,1,1,1,0,0,,"Having a systematic approach on things helps a lot. Taking time to really understand how things work, taking time to find a good approach/design. Patience helps when it comes to tracing a problem to its root cause. Curiosity is very helpful in getting better. Just trying out new techniques just for fun. Getting motivated in general is imho often a problem, I remember a famous blog post from Joel Spolsky on that one. Communicating is also important---being able to describe a technicality in a comprehensible way. There is also a correlation that I observed: Devs without systematic thinking and workflow were usually not able to explain things to others in an acceptable way. What also helps a lot is the tendency to review and recheck things regularly.","Not to push too hard when it is not really necessary. I've seen people setting *very* early deadlines for almost everything without any reason and constantly bugging devs  When are you done with X? . Doing this in a tense release window is one thing, doing it all the time simply kills the product and prevents a dev from getting better. So I think it's a good idea to give devs a bit of a flexibility and actual time to learn new techniques. Some companies allow people to work some hours on private side-projects--I think this is actually pretty clever.",1,"I'm actually not doing it actively. Github and similar platforms monitor me. I just have to look at the graphs because they're on the frontpage. However, I do not think that measuring commits, LOC or some other crap automatically is a good idea to rate performance. It will raise competition, yes---but not the one an employer would like. It will just get people to optimize whatever is measured. And hell, software devs are very good at that. I would rather monitor projects, not people. And I would do it in a semantic way, i.e., do I reach the specified goals for the product? Do I fix critical bugs? The problem with monitoring is that you can't automatically estimate the worthiness of a contribution. A colleague of mine sent a 80 line patch to the mailing list of an open source project, and their response was something like  WTF! Thank you so much, we've been discussing for 3 years how to solve this problem.  You can't measure that.","The moment in which you see that a change of yours just made a real improvement.to the project. Could be a cool feature, but could also be a performance speedup.",2,2,,,"Having to deal with crappy code from other people. Having people commit (or try to commit) shitty code to your project feels like a slap in the face. That is the one thing that demotivates me the most. As a technical thing, the stuff that gives me the most headaches are usually buildsystems and multithreading.",4,,,8,,70,4,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,104,12,2,5,3,"Knowledge of patterns, what things work and how to work with others. ",Working with others,"Writing clean, tested code",Knowledge of frameworks and third party code available,1,0,0,0,1,0,1,0,,"Patience, drive and being able to think outside the box.",That's not the employer's job.,2,,Being able to affect many people with my work.,2,1,,Very calm and impartial of code - whether he wrote it or someone else did.,Consensus,3,26,1,1,,60,6,2,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,105,19,12,6,6,"A software development expert not only solves hard problems, but makes them look easy.",Problem solving,Design,Learning; rapidly acquiring and retaining information,0,0,1,0,1,1,0,0,,"A long attention span; a high tolerance for frustration and tedium; a high level of sensitivity to pain (e.g. writing boilerplate code or dealing with problems that are incidental, rather than fundamental); a low tolerance for complexity; intellectual curiosity; excellent communication skills.",Learning materials such as books and conferences should be freely available. Employees who are performing decently should be permitted and encouraged to find side projects and tasks to work on on the side; not necessarily private projects so much as development tasks that are not part of the sprint plan. These can be anything from smaller refactorings to ambitious prototyping or reengineering work.,1,"I occasionally look at my  numbers  (total code reviews submitted; lines of code added and removed; packages modified; etc), but I don't use these as  metrics  of anything, or as goals.",Making long-standing problems disappear,2,2,,,It is difficult to cultivate and maintain a culture of quality on most teams. Many organizations do not seem to understand the principle of delayed gratification.,5,28,1,1,,90,4,2,,2,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,106,22,0,6,2,Ability to nurture the simplicity in complex systems.,Programming,System design,Design patterns,1,0,1,0,0,0,1,0,,Abstract thinking. Creative problem solving.,Give them varying challenges just beyond their current skills.,2,,Making interactive art (in other words: games).,2,2,,,Learning to let go of problems when they have gotten the best of me (and let my subconscious mind do the remaining work).,2,36,1,1,,100,1,1,,3,ANONYMIZED,ANONYMIZED,Good luck with your survey. =),North America,UnitedStates
2,107,26,13,6,6,"Someone who has fluency in their development language and platform. Fluency doesn't mean knowing every detail, but it does mean having the ability to implement both implicit and explicit requirements using a combination of existing knowledge plus new knowledge.",requirements analysis,testing,coding,0,0,0,0,0,1,0,0,,"attention to detail, an analytical mind, embracing the new, self-criticism, love of making things","Give them a mix of things they're already good at and things they don't know how to do, but be aware of the fact that the new stuff will take a bit longer. Make sure they enjoy it. People who enjoy their work are far more productive and willing to think about problems during off time. If you give someone a task they hate, they'll do the minimum required so they can spend more time doing what they love.",2,,Making things that never existed before.,1,1,"When people stop loving their job, they start to coast. They drag their feet, they push back, and they generally don't invest themselves in the work.","He's one of the few people who's smarter than me, and he's a great teacher. He helped me learn some really useful design patterns that opened my mind to entirely new concepts of software development.",Making nontechnical managers/supervisors understand our process better.,5,44,1,1,,90,3,2,,4,,ANONYMIZED,,North America,UnitedStates
2,108,4,0,3,1,"The ability to create efficient, extensible, and maintainable software.",naming things,cache invalidation,recognizing off-by-one errors,1,0,1,0,1,0,0,0,,Friendliness  Openness  Creativity,There is not a lot that can be done. The initiative should be on the side of the employees - only the ones actually benefitting from such development should be allowed to take a part in it.,1,Unit testing  Static code analysis  Continuous integration,The fact that my work is being actively used.,2,2,,,Making decisions. Software development is an endless compromise due to schedules that need to be kept.,2,26,1,1,,90,7,3,,2,ANONYMIZED,ANONYMIZED,,Europe,Poland
2,109,15,15,6,5,"Knowledge of common data structures, algorithms, and design patterns  Knows common pitfalls of chosen language  Can use version control and can explain why it's important  Able to work well with others  Open to code review and willing to change code based on feedback","Knowledge of common data structures, algorithms, and design patterns",Able to work well with others,Open to code review and willing to change code based on feedback,1,1,1,1,1,0,1,0,,"Willing to work with others, even those from other disciplines  Open to learning new ways of doing things  Can communicate ideas clearly  Can take critiques of their code in a professional manner",Integrate new technologies when appropriate  Offer training in new technologies  Team building exercises,2,,Solving a problem by using my skills and working with others.,2,2,,,Getting other people to work together towards the common goal,4,33,1,1,,50,1,4,,4,,ANONYMIZED,,North America,UnitedStates
2,110,13,3,6,4,"General knowledge of used technologies, ability to think in both low and high levels of the problem.",Analytical thinking,Fluency in the used programming environment,Effective communication,1,0,1,0,1,0,0,0,,"Curiosity, persistence (not giving up)",Surround them with mentors who can help them grow,2,,Being able to sit down and do things without too much up front investment,2,2,,,"Team communication, making sure we are all on the same page, we don't keep problems secret, etc.",4,32,1,3,,80,6,2,,4,,ANONYMIZED,,Europe,
2,111,13,9,6,6,"Define good specifications, writing quality code, ",Wrinting specification,"Writing code, testing",Choose good technology,0,0,1,0,1,0,1,0,,"Need an experienced, innovative, reliable, rigourous","Let employee to have some time to study new technology, framework or other company products",1,"development tools like redmine, github,",Wrting a nice software that it used by happy users,2,1,,"Mentor is rigourous in this developement, and he can rapidly fix some bugs, just by seing the bug description",Be able to write good software in a quick time,5,33,1,1,,80,4,3,,4,,ANONYMIZED,,Asia,Taiwan
2,112,8,8,5,5,Create simple and maintainable solutions that knows why is the best solution and the details of it. ,Analyze the problem and take the right approach for it,Write simple and maintainable code,Take care of details,1,0,1,0,1,0,0,0,,,"Learn new languages, keep in touch with new technologies or frameworks, take new challenges",3,,"The ability to create something totally new, from scratch, and being able to share it with the rest of the world in a very easy manner",2,3,,,,5,31,1,1,,100,4,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,113,2,2,2,2,Reliable code.,Discussions,Planning,Deployment,1,0,1,1,0,1,0,0,,Disciplines,Give their best when working and must have continuous communication.,2,,Feeling of I did it. ,2,2,,,Applying the concept,2,25,1,9,,10,1,3,,4,ANONYMIZED,ANONYMIZED,Thanks for giving me the chance to take part in your work... ,Asia,
2,114,3,3,4,5,Its ability to find simple solutions to complex problems,learn,solve problems,write code,1,1,1,0,1,1,0,0,,"curious, perfectionist, hard worker",give them few hours per week to learn new languages and technologies.,1,with static code analysis,shipping well crafted software,1,1,"I observe a decline in performance when people stop learning, when they lose passion for software programming.  Personally my performance declined when my mind is too busy with personal stuff.",He is 15 years older than me. He have the same passion for software programming. He loves to teach and always listen what I have to propose. He has a wide knowledge in various area of software programming,Make hard things simple,4,27,1,1,,90,3,3,,4,,ANONYMIZED,,Europe,
2,115,12,10,4,3,"Is well familiar with development techniques like Design Patterns, TDD, XP Programming, Scrum, Continuous Integration/Build/Deployment, Clean Code and so on.  Also has experience with lots of programming languages. Therefore knowing it's pros/cons and concepts they are addressing.",Help freshmen to improve,Writing clean code,Is/Has experienced in many fields,0,0,1,0,0,0,1,0,,Be passionately curious about software development practices/tools/techniques/etc,"Robert C. Martin once said, a developer works 60 hours per week. 40 for work and 20 to improve. Google has  20% time , where developer can investigate in everything they like.  The important part here, is to investigate these hours in a topic *you* want to investigate. youtube -> watch?v=RpWsBCaJQQ8",2,,Reading and writing simple and easy to test code because my true passion is refactoring.,2,1,,"He knew a lot more then I did back then. The main reason was research. He always suggested new features or tools to use. And he also had a broad knowledge in many programming languages.  Also, he was always calm when helping or discussing things with other. So he was always acting professional.","Not only convince people that the techniques and tools (git, continues integration, TDD, XP programming, refactoring). we are using, are awesome and worth it, but also use them as well and take the time to learn it.  It's one thing to agree to those things, but another to properly use and learn them.  ",3,28,1,1,,98,25,1,,4,ANONYMIZED,ANONYMIZED,Interesting survey! Looking forward to the results.,Europe,
2,116,5,5,3,4,"Knowledge of all possible languages, paradigms and design patterns, and capability to apply the most suited one(s) where appropriate.","Abstraction, Task Breakdown",Coding,Refactoring,1,0,1,1,1,0,0,0,,"Ability to break down tasks and organize work.  Being open enough to use the appropriate tool for the job, instead of focussing on a single language/paradigm/etc...",Promote learning of new languages/paradigms/patterns. Promote usage of different technical solutions.,2,,To design and develop a non trivial software system which works (mostly) as intended.,2,2,,,"To refrain from sticking with one language/platform/paradigm for most/all problems. To produce readable, reusable code which is easy to maintain and understand.",3,23,1,9,,10,1,2,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,117,10,10,6,6,"organized, careful, looking into details, good knowledge on design, coding and test technique, open minded, interested in new technologies",design,coding,test,0,1,1,1,0,0,0,0,,,"writing codes day to day to practice development skills, keep learning new things, talking with senior developers to how to improve",2,,"starting with a professional and experienced team, and learn good conventions and experiences from the very beginning of the career.",2,1,,"teach me the good conventions, habit  share thinks  review my work and provide feedbacks (good/bad)  encourage me on difficulties ","to catch up and generate good efficiency after switch to a new domain, a new industry or a new technique.",5,36,1,3,,80,5,3,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,118,20,17,5,5,Software development expert is a team player with deep understanding on how good applications are implemented. Not forgetting technical expertise ofcourse.,The ability to understand what makes code and a solution good and bad.,The ability to  see  and understand problems and their solutions clearly and to  think ahead .,The ability to instruct and mentor others.,0,0,1,0,0,1,0,0,,"Being inspired and enthusiastic regarding software development, desire for constant improvement of one's skills. ",Not be stuck on old technology. ,2,,Writing tools that help other people and make their lives easier or jobs more meaningful.,1,2,Being stuck in a lifelong project with no clear end in sight. Being stuck on meetings while feeling the need to be more creative.,,"Too many ideas, too little time.",5,37,1,3,,50,3,1,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,119,39,18,5,5,"Full understanding of modularization, the distinction between intention and extension, and an exemplary ability, and strong desire, to explain things to others.",Understanding and organizing complex systems and requirements.,Making reasoned design decisions.,Naming for clarity.,1,1,0,1,0,0,1,1,teamworking in Java projects,Empathy; being able to understand others' viewpoints; mastery of one's mother tongue; mathematical or other precise discipline training.,"Above all they should encourage them to share, work with, educate and learn from their colleagues. Rather than imposing a strict discipline, they should instead encourage careful thinking: about the project, about the workplace, about the software tools, about the project management, about the client's context, about the moral and ethical dimensions of their workâ€”everything, in short, to do with their professional field.",1,Velocity measures; peer evaluations.,"Working with people and their challenges. The technical aspects of the work are necessary, and interesting, but they would be as dust in the mouth if there weren't people to share it with, explore it with, and develop it with.  I also love deleting code without removing function.",1,1,"A decline in performance often comes with a reduction in contextual scope: in the work project, or in the work environment; in the team structure, or the team dynamic; in the appreciation of one's peers or one's superiors; in self-confidence.  Age might be blamed for some of these, but in general I see age bringing a perspective and insight which compensates greatly for loss of mental acuity or flexibility, if any. Age is more often associated with a reduction in expectation (see above) rather than ability.","I have had the great good fortune to have been influenced by many mentors: in education and latterly in industry I was influenced by Professors and academics in critical thinking.  In the companies I worked for there were experienced team leaders and (occasionally) managers who led by example and were able to educate the team and their employees by the use of reason. Then there were the fantastically skilled younger members of teams I have worked in, who were much faster than I, and allowed me to see things differently, and therefore improve.","Convincing 'management' that a development process should change.  It is not a technical problemâ€”these are either easy or impossible to solve, and the latter can be detected early enough and avoidedâ€”the hardest problems are to do with understanding and communication. Normally it is poor communication, or the unwillingness to foster good communication, which makes projects hard to work in, or impossible to complete.",4,62,1,1,,100,5,3,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,120,3,3,3,3,"Hability to solve problems in efficient ways , always trying to apply good pratices and being concerned about performance and development of easy maintenance code",Solve problems in a efficient way,Write code with clarity and easy readability,Identify problems ,1,0,1,0,1,0,0,0,,"Be worried about others persons that will work with your code; always be in search of improve the own knowledge, as well as be someone open to share the obtained knowledge to others; be someone receptive to critics and also give opinions about the work of colleagues with the objetive of improve the general quality of the project","Provide a receptive and friendly environment, where everyone feel free to talk about your visions, give opinions and sugestions. Valorize good ideas and recognize the efforts of the teams members. Give to the equipe permission to apply habilities, as well as incentivate and provide courses and others ways of expand knowledge",2,,"Solve problems and have the capacity of help to minimize problems of a large range of areas. Also, the possibility of improve the performance in crucial or exaustives tasks in other fields of study",3,1,,"A person highly concerned with follow good pratices of development, application of design patterns, modeling and documentation of the project. Also, concerned about assure the quality of the product realizing tests. ",Estimate the total effort that will be necessary to accomplish a task ,3,22,1,9,,65,3,5,undergraduate,4,,ANONYMIZED,,South America,
2,121,5,3,6,5,,Decomposing Ideas,Communication,Creativity,0,1,1,1,0,1,1,0,,Empathy  Commitment  Logic,,1,"Unit tests, code coverage.  Integration tests, benchmarks.  High-level metrics of VCS contributions",Working with other people to build exciting products.,2,2,,,Software complexity,5,22,1,3,,70,6,1,,4,ANONYMIZED,ANONYMIZED,,North America,UnitedStates
2,122,3,2,3,3,"Is aware that the ultimate goal for the software to be developed is to satify the stakeholders needs. To do so, him / her uses the appropiate SW development tools and practices. ",Identifying user needs,Programming skills,Finding solutions,1,1,0,1,0,1,0,0,,"To become an expert you have to passionate about SW. Read, practice, be willing to learn from others.","Send them to intensive courses, organize internal hackatons, give some freedom to try new things. (Good question, never thought about it before)",2,,Being able to see that that project on which you've being working so hard is actually useful for someone out there.,2,1,,I've got two. The first one made me love programming. He was my university teacher and you could see how passionate he was about SW. The moment I met him was when I realized I chose the right career. The other one was my mentor at my job. He wasn't an expert back then but he tried to give me all the knowledge he could from his previous experiences. I coudn't be more grateful with them.,"Understanding what your user really need and how it should actually work. For the implementation, there's always StackOverflow to save your day.",4,19,1,1,,90,6,1,,2,ANONYMIZED,ANONYMIZED,Your questions got me thinking. Thanks you for that.,South America,
2,123,7,3,4,3,Either flexibility when it comes to different techniques / technologies or very deep knowledge of some technology. And a lot of experience.,Analytical thinking,Error solving,Code cleanliness,1,1,1,1,0,0,1,0,,"Will to learn and discover new things, logical thinking, will to cooperate",Let the employees participate in various challenges testing their skills.,2,,Seeing that my code works and it's actually used for something.,1,1,,Two of my high school teachers. They were both good programmers and they had introduced me in some programming technics. ,"Analysis. If you work on a big project, analysis is very important and usually one of the hardest tasks. ",3,21,1,1,,90,1,1,,4,ANONYMIZED,ANONYMIZED,,Europe,
2,124,12,6,5,5,Realizes that getting something to work is a side effect. Knows code readability and changeability is the most important quality of software.  Can explain what he is doing to non developers.  ,Knowing what is 'good enough' and explaining the different paths to a junior developer,Investigating the domain he writes software for,Knowing how to simplify large pieces of software,1,0,1,1,0,0,1,0,,Being humble. Being curious. Being accurate.,Fire people who do not have the intrinsic motivation to improve themselves. Give them autonomy. ,2,,Getting a better understanding of life in general.,2,2,,,The fact that most software we use to build software is badly written and contains an insane amount of bugs. People who understand the theory lack the experience required to create maintainable software and people who know how to create maintainable software lack a theoretic background to write good software. ,5,34,1,1,,90,10,1,,4,ANONYMIZED,ANONYMIZED,"About the roles I could chose from: software architect are an illusion. Any architect that is not developing is failing, also any developer that is not an architect is failing.    Good luck with your research!",Europe,
2,125,8,3,4,3,Notion of non-functional and functional requirements to ensure proper quality of the product being developed. Notion of the software development process to be aware of every step it takes to make up a functional product delivery. Arquitectural knowledge in order not to neglect system approach towards the software. It must have a notion of paradigms and its patterns and principles. It should have a notion of the infraestructure level. It has to acknowledge different algorithm techniques and not to neglect math's approaches to the solutions of the algorithms.,Design of a well-build architecture for a software,Clean implementation of algorithms leaning on different practices in the variety of paradigms that exist,Design of a well-made up infraestructure,1,1,1,0,1,0,0,0,,"Being team player. Searching for well-developed software (avoiding releasing prototypes without foreseeing the future). Aiming to necessities of clients (and creating them, making everything in the top of the line among other solutions in the market). Thinking out of the box. ","Allowing development team (architects, developers, etc.) to fly through different solutions supported by investigative methods and good practices being held on the company. Agility must be what aims the process not getting away every good practice in software engineering process.",2,,Keeping up with new techniques and applying older ones (because of restrictions in my current job),1,2,It relates to not using techniques that ones has acquired so far.,,"Excesive control over what we do by the general manager (its word is law, no creativity improvements are permitted without its permission)",2,23,1,1,,100,3,2,,2,ANONYMIZED,ANONYMIZED,,South America,
2,126,12,2,6,4,"Deep knowledge of programming languages, typical problems and common solutions, have an analytical mind.",Write good quality code,"Interact with other colleagues, both technical and non-technical.",Frame problems and find solutions ,1,1,0,1,0,0,0,0,,Have an analytical mind; have pleasure in solving problems; being at ease in sharing knowledge; work as team member.,,1,Time sheet.,"1) Finding a solution to a problem and   2) deliver a working solution complete, possible to clients",2,2,,,The time constraints and pressures.,4,43,1,1,,90,8,3,,2,ANONYMIZED,ANONYMIZED,The questions should contains less open answers: it makes difficult to know exactly what to answer and what is expected to be answered. ,Europe,
2,127,27,20,6,4,"Experience in the full life cycle from design, to implementation, and testing. Knowledge of multiple programming languages, data structures and design patterns. ",abstract thinking,logic,modularization,1,1,1,0,0,0,0,0,,The desire to learn new approaches; The ability to work /learn from others. ,Give employees space/time to learn. Make sure employees are not always under time pressure to deliver on project goals. ,2,,When I learn a cool new 'something'. When I can show somebody a better way to achieve something. When I figure something out that others didn't see before.,2,1,,Well there is no single person. I have learned from others when working in teams. ,"I do a lot of web related projects. The technology stack continuously evolves and if has hard to stay up to date, separate the hype from the solid approaches.",4,55,2,1,,60,1,3,,4,ANONYMIZED,ANONYMIZED,"I am the tech person at my job supporting an open source application. In that role I am the only developer at work, But on the other hand,  I contribute back to the project, and interact with the open source community.  So am I in a 1 person team or in a giant team ? ",North America,UnitedStates
